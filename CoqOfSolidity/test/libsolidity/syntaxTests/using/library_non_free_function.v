(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module L.
  Definition id (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 14
src: 110:22:0
nodeType: UsingForDirective
typeName: Ty.path "uint"
functionList: [{function: (* Beginning of a node! *)
id: 12
src: 117:4:0
nodeType: IdentifierPath
name: L.id
nameLocations: [117:1:0, 119:2:0, ]
referencedDeclaration: 10
, }, ]
global: 0


  Definition f (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "x" |),
            "id"
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
