(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition foo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          NewExpression (* Beginning of a node! *)
id: 4
src: 113:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 3
src: 113:1:0
nodeType: IdentifierPath
name: D
nameLocations: [113:1:0, ]
referencedDeclaration: 25

referencedDeclaration: 25
typeDescriptions: typeString contract DtypeIdentifier st_contract$_D_$25

,
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition callFoo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "foo" |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.

(* Contract *)
Module D.
  Definition callFoo (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.
