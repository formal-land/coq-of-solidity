(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  
End A.

(* Contract *)
Module B.
  
End B.

(* Contract *)
Module C.
  
End C.

(* Contract *)
Module D.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "a" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 14
src: 103:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 13
src: 103:1:0
nodeType: IdentifierPath
name: C
nameLocations: [103:1:0, ]
referencedDeclaration: 7

referencedDeclaration: 7
typeDescriptions: typeString contract CtypeIdentifier st_contract$_C_$7

,
            []
          |)
        |) in
      let _ :=
        M.get_name (| "a" |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.
