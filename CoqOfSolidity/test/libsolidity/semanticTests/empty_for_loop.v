(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module test.
  Definition f (Î± : list Value.t) : M :=
    match Î± with
    | [] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "ret" |),
          Value.Integer 1
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 19
src: 85:76:0
nodeType: ForStatement
initializationExpression: 
condition: 
loopExpression: 
body: let _ :=
          M.assign (|
            "+=",
            M.get_name (| "ret" |),
            Value.Integer 1
          |) in
        let _ :=
          if M.bin_op (|
            ">=",
            M.get_name (| "ret" |),
            Value.Integer 10
          |) then
            M.break (||)
          else
            Value.Tuple [] in
        Value.Tuple []
isSimpleCounterLoop: 0
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End test.
