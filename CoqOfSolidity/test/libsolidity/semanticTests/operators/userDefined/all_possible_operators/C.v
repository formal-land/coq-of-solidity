(* Generated by solc *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module C_785.
  Definition code : M.t BlockUnit.t :=
    do* ltac:(M.monadic (
      M.function (|
        "allocate_unbounded",
        [],
        ["memPtr"],
        do* ltac:(M.monadic (
          M.assign (|
            ["memPtr"],
            Some (M.call (|
              "mload",
              [
                [Literal.number 64]
              ]
            |))
          |)
        )) in
        M.od
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
        [],
        [],
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert",
              [
                [Literal.number 0];
                [Literal.number 0]
              ]
            |)
          |)
        )) in
        M.od
      |)
    )) in
    do* ltac:(M.monadic (
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "mstore",
            [
              [Literal.number 64];
              M.call (|
                "memoryguard",
                [
                  [Literal.number 0x80]
                ]
              |)
            ]
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.if_ (|
          M.call (|
            "callvalue",
            []
          |),
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                []
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.assign (|
          ["_1"],
          Some (M.call (|
            "allocate_unbounded",
            []
          |))
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "codecopy",
            [
              M.get (| "_1" |);
              M.call (|
                "dataoffset",
                [
                  [Literal.string "435f3738355f6465706c6f796564"]
                ]
              |);
              M.call (|
                "datasize",
                [
                  [Literal.string "435f3738355f6465706c6f796564"]
                ]
              |)
            ]
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "return",
            [
              M.get (| "_1" |);
              M.call (|
                "datasize",
                [
                  [Literal.string "435f3738355f6465706c6f796564"]
                ]
              |)
            ]
          |)
        |)
      )) in
      M.od
    )) in
    M.od.

  Module C_785_deployed.
    Definition code : M.t BlockUnit.t :=
      do* ltac:(M.monadic (
        M.function (|
          "shift_right_unsigned",
          ["value"],
          ["newValue"],
          do* ltac:(M.monadic (
            M.assign (|
              ["newValue"],
              Some (M.call (|
                "shr",
                [
                  [Literal.number 224];
                  M.get (| "value" |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_unbounded",
          [],
          ["memPtr"],
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "mload",
                [
                  [Literal.number 64]
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
          [],
          [],
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
          [],
          [],
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_decode",
          ["headStart"; "dataEnd"],
          [],
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "slt",
                [
                  M.call (|
                    "sub",
                    [
                      M.get (| "dataEnd" |);
                      M.get (| "headStart" |)
                    ]
                  |);
                  [Literal.number 0]
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_tuple",
          ["headStart"],
          ["tail"],
          do* ltac:(M.monadic (
            M.assign (|
              ["tail"],
              Some (M.call (|
                "add",
                [
                  M.get (| "headStart" |);
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_testArithmetic",
          [],
          [],
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_decode",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "fun_testArithmetic",
                []
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_tuple",
                [
                  M.get (| "memPos" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get (| "memEnd" |);
                      M.get (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_testComparison",
          [],
          [],
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_decode",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "fun_testComparison",
                []
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_tuple",
                [
                  M.get (| "memPos" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get (| "memEnd" |);
                      M.get (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_testBitwise",
          [],
          [],
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_decode",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "fun_testBitwise",
                []
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_tuple",
                [
                  M.get (| "memPos" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get (| "memEnd" |);
                      M.get (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
          [],
          [],
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_t_rational_by",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_int8",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.call (|
                "signextend",
                [
                  [Literal.number 0];
                  M.get (| "value" |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "identity",
          ["value"],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_1_by_1_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_t_rational_by",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "constant_ONE",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_rational_1_by_1_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "expr_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get (| "_1" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_t_rational_by_1",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_2_by_1_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_t_rational_by_1",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "constant_TWO",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some ([Literal.number 0x02])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_rational_2_by_1_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "expr_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get (| "_1" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_int8_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_rational_3_by",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_3_by_1_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_rational_3_by",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "panic_error_0x01",
          [],
          [],
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x01]
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "assert_helper",
          ["condition"],
          [],
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "iszero",
                [
                  M.get (| "condition" |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x01",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_rational_by_1",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_by_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_rational_by_1",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "constant_ZERO",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_rational_by_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "expr_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get (| "_1" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "constant_THREE",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some ([Literal.number 0x03])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_rational_3_by_1_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "expr_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get (| "_1" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_rational_minus_by",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_minus_by_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_rational_minus_by",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_rational_by",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_t_rational_by_to_t_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_rational_by",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "constant_SIX",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some ([Literal.number 0x06])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_t_rational_by_to_t_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "expr_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get (| "_1" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_testArithmetic",
          [],
          [],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.call (|
                "fun_add",
                [
                  M.get (| "expr" |);
                  M.get (| "expr_1" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some ([Literal.number 0x03])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_3" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_3_by_1_to_int8",
                    [
                      M.get (| "expr_4" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_5" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_6"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_7"],
              Some (M.call (|
                "constant_ZERO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_8"],
              Some (M.call (|
                "fun_add",
                [
                  M.get (| "expr_6" |);
                  M.get (| "expr_7" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_9"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_8" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_10"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_11"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_9" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_10" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_11" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_12"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_13"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_14"],
              Some (M.call (|
                "fun_sub",
                [
                  M.get (| "expr_12" |);
                  M.get (| "expr_13" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_15"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_14" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_16"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_17"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_15" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_16" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_17" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_18"],
              Some (M.call (|
                "constant_THREE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_19"],
              Some (M.call (|
                "constant_THREE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_20"],
              Some (M.call (|
                "fun_sub",
                [
                  M.get (| "expr_18" |);
                  M.get (| "expr_19" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_21"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_20" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_22"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_23"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_21" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_by_to_int8",
                    [
                      M.get (| "expr_22" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_23" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_24"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_25"],
              Some (M.call (|
                "fun_unsub",
                [
                  M.get (| "expr_24" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_26"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_25" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_27"],
              Some (M.call (|
                "not",
                [
                  [Literal.number 1]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_28"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_26" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_minus_by_to_int8",
                    [
                      M.get (| "expr_27" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_28" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_29"],
              Some (M.call (|
                "constant_ZERO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_30"],
              Some (M.call (|
                "fun_unsub",
                [
                  M.get (| "expr_29" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_31"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_30" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_32"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_33"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_31" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_by_to_int8",
                    [
                      M.get (| "expr_32" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_33" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_34"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_35"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_36"],
              Some (M.call (|
                "fun_mul",
                [
                  M.get (| "expr_34" |);
                  M.get (| "expr_35" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_37"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_36" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_38"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_39"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_37" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_38" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_39" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_40"],
              Some (M.call (|
                "constant_THREE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_41"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_42"],
              Some (M.call (|
                "fun_mul",
                [
                  M.get (| "expr_40" |);
                  M.get (| "expr_41" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_43"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_42" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_44"],
              Some ([Literal.number 0x06])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_45"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_43" |)
                    ]
                  |);
                  M.call (|
                    "convert_t_rational_by_to_t_int8",
                    [
                      M.get (| "expr_44" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_45" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_46"],
              Some (M.call (|
                "constant_SIX",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_47"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_48"],
              Some (M.call (|
                "fun_div",
                [
                  M.get (| "expr_46" |);
                  M.get (| "expr_47" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_49"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_48" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_50"],
              Some ([Literal.number 0x03])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_51"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_49" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_3_by_1_to_int8",
                    [
                      M.get (| "expr_50" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_51" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_52"],
              Some (M.call (|
                "constant_THREE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_53"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_54"],
              Some (M.call (|
                "fun_div",
                [
                  M.get (| "expr_52" |);
                  M.get (| "expr_53" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_55"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_54" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_56"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_57"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_55" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_56" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_57" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_58"],
              Some (M.call (|
                "constant_SIX",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_59"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_60"],
              Some (M.call (|
                "fun_mod",
                [
                  M.get (| "expr_58" |);
                  M.get (| "expr_59" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_61"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_60" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_62"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_63"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_61" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_by_to_int8",
                    [
                      M.get (| "expr_62" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_63" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_64"],
              Some (M.call (|
                "constant_THREE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_65"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_66"],
              Some (M.call (|
                "fun_mod",
                [
                  M.get (| "expr_64" |);
                  M.get (| "expr_65" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_67"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_66" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_68"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_69"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_67" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_68" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_69" |)
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_bool",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.call (|
                "iszero",
                [
                  M.call (|
                    "iszero",
                    [
                      M.get (| "value" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_testComparison",
          [],
          [],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.call (|
                "fun_eq",
                [
                  M.get (| "expr" |);
                  M.get (| "expr_1" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.get (| "expr_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_3" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_4" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_5" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_6"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_7"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_8"],
              Some (M.call (|
                "fun_eq",
                [
                  M.get (| "expr_6" |);
                  M.get (| "expr_7" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_9"],
              Some (M.get (| "expr_8" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_10"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_11"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_9" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_10" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_11" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_12"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_13"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_14"],
              Some (M.call (|
                "fun_noteq",
                [
                  M.get (| "expr_12" |);
                  M.get (| "expr_13" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_15"],
              Some (M.get (| "expr_14" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_16"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_17"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_15" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_16" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_17" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_18"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_19"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_20"],
              Some (M.call (|
                "fun_noteq",
                [
                  M.get (| "expr_18" |);
                  M.get (| "expr_19" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_21"],
              Some (M.get (| "expr_20" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_22"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_23"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_21" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_22" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_23" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_24"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_25"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_26"],
              Some (M.call (|
                "fun_lt",
                [
                  M.get (| "expr_24" |);
                  M.get (| "expr_25" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_27"],
              Some (M.get (| "expr_26" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_28"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_29"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_27" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_28" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_29" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_30"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_31"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_32"],
              Some (M.call (|
                "fun_lt",
                [
                  M.get (| "expr_30" |);
                  M.get (| "expr_31" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_33"],
              Some (M.get (| "expr_32" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_34"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_35"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_33" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_34" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_35" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_36"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_37"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_38"],
              Some (M.call (|
                "fun_leq",
                [
                  M.get (| "expr_36" |);
                  M.get (| "expr_37" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_39"],
              Some (M.get (| "expr_38" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_40"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_41"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_39" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_40" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_41" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_42"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_43"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_44"],
              Some (M.call (|
                "fun_leq",
                [
                  M.get (| "expr_42" |);
                  M.get (| "expr_43" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_45"],
              Some (M.get (| "expr_44" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_46"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_47"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_45" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_46" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_47" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_48"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_49"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_50"],
              Some (M.call (|
                "fun_gt",
                [
                  M.get (| "expr_48" |);
                  M.get (| "expr_49" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_51"],
              Some (M.get (| "expr_50" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_52"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_53"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_51" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_52" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_53" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_54"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_55"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_56"],
              Some (M.call (|
                "fun_gt",
                [
                  M.get (| "expr_54" |);
                  M.get (| "expr_55" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_57"],
              Some (M.get (| "expr_56" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_58"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_59"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_57" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_58" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_59" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_60"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_61"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_62"],
              Some (M.call (|
                "fun_geq",
                [
                  M.get (| "expr_60" |);
                  M.get (| "expr_61" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_63"],
              Some (M.get (| "expr_62" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_64"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_65"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_63" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_64" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_65" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_66"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_67"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_68"],
              Some (M.call (|
                "fun_geq",
                [
                  M.get (| "expr_66" |);
                  M.get (| "expr_67" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_69"],
              Some (M.get (| "expr_68" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_70"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_71"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_69" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get (| "expr_70" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_71" |)
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_t_rational_minus_by",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_minus_1_by_1_to_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_t_rational_minus_by",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_rational_minus_by_1",
          ["value"],
          ["cleaned"],
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get (| "value" |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_t_rational_minus_by_to_t_int8",
          ["value"],
          ["converted"],
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_rational_minus_by_1",
                        [
                          M.get (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_testBitwise",
          [],
          [],
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.call (|
                "fun_bitor",
                [
                  M.get (| "expr" |);
                  M.get (| "expr_1" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some ([Literal.number 0x03])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_3" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_3_by_1_to_int8",
                    [
                      M.get (| "expr_4" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_5" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_6"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_7"],
              Some (M.call (|
                "constant_ZERO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_8"],
              Some (M.call (|
                "fun_bitor",
                [
                  M.get (| "expr_6" |);
                  M.get (| "expr_7" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_9"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_8" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_10"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_11"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_9" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_10" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_11" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_12"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_13"],
              Some (M.call (|
                "constant_THREE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_14"],
              Some (M.call (|
                "fun_bitand",
                [
                  M.get (| "expr_12" |);
                  M.get (| "expr_13" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_15"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_14" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_16"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_17"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_15" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_16" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_17" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_18"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_19"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_20"],
              Some (M.call (|
                "fun_bitand",
                [
                  M.get (| "expr_18" |);
                  M.get (| "expr_19" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_21"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_20" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_22"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_23"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_21" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_1_by_1_to_int8",
                    [
                      M.get (| "expr_22" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_23" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_24"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_25"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_26"],
              Some (M.call (|
                "fun_bitxor",
                [
                  M.get (| "expr_24" |);
                  M.get (| "expr_25" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_27"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_26" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_28"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_29"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_27" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_by_to_int8",
                    [
                      M.get (| "expr_28" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_29" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_30"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_31"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_32"],
              Some (M.call (|
                "fun_bitxor",
                [
                  M.get (| "expr_30" |);
                  M.get (| "expr_31" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_33"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_32" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_34"],
              Some ([Literal.number 0x03])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_35"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_33" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_3_by_1_to_int8",
                    [
                      M.get (| "expr_34" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_35" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_36"],
              Some (M.call (|
                "constant_ZERO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_37"],
              Some (M.call (|
                "fun_bitnot",
                [
                  M.get (| "expr_36" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_38"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_37" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_39"],
              Some (M.call (|
                "not",
                [
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_40"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_38" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_minus_1_by_1_to_int8",
                    [
                      M.get (| "expr_39" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_40" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_41"],
              Some (M.call (|
                "constant_ONE",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_42"],
              Some (M.call (|
                "fun_bitnot",
                [
                  M.get (| "expr_41" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_43"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_42" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_44"],
              Some (M.call (|
                "not",
                [
                  [Literal.number 1]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_45"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_43" |)
                    ]
                  |);
                  M.call (|
                    "convert_rational_minus_by_to_int8",
                    [
                      M.get (| "expr_44" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_45" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_46"],
              Some (M.call (|
                "constant_TWO",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_47"],
              Some (M.call (|
                "fun_bitnot",
                [
                  M.get (| "expr_46" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_48"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_47" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_49"],
              Some (M.call (|
                "not",
                [
                  [Literal.number 2]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_50"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_48" |)
                    ]
                  |);
                  M.call (|
                    "convert_t_rational_minus_by_to_t_int8",
                    [
                      M.get (| "expr_49" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_50" |)
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_userDefinedValueType_Int",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some ([Literal.number 0])
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "panic_error_0x11",
          [],
          [],
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x11]
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "checked_add_int8",
          ["x"; "y"],
          ["sum"],
          do* ltac:(M.monadic (
            M.assign (|
              ["x"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "x" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["y"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["sum"],
              Some (M.call (|
                "add",
                [
                  M.get (| "x" |);
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "or",
                [
                  M.call (|
                    "sgt",
                    [
                      M.get (| "sum" |);
                      [Literal.number 0x7f]
                    ]
                  |);
                  M.call (|
                    "slt",
                    [
                      M.get (| "sum" |);
                      M.call (|
                        "not",
                        [
                          [Literal.number 127]
                        ]
                      |)
                    ]
                  |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x11",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_add",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "checked_add_int8",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "checked_sub_int8",
          ["x"; "y"],
          ["diff"],
          do* ltac:(M.monadic (
            M.assign (|
              ["x"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "x" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["y"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["diff"],
              Some (M.call (|
                "sub",
                [
                  M.get (| "x" |);
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "or",
                [
                  M.call (|
                    "slt",
                    [
                      M.get (| "diff" |);
                      M.call (|
                        "not",
                        [
                          [Literal.number 127]
                        ]
                      |)
                    ]
                  |);
                  M.call (|
                    "sgt",
                    [
                      M.get (| "diff" |);
                      [Literal.number 0x7f]
                    ]
                  |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x11",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_sub",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_t_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_t_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "checked_sub_int8",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "negate_int8",
          ["value"],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "eq",
                [
                  M.get (| "value" |);
                  M.call (|
                    "not",
                    [
                      [Literal.number 127]
                    ]
                  |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x11",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "sub",
                [
                  [Literal.number 0];
                  M.get (| "value" |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_unsub",
          ["var_x"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.call (|
                "negate_int8",
                [
                  M.get (| "expr_1" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_3" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "checked_mul_int8",
          ["x"; "y"],
          ["product"],
          do* ltac:(M.monadic (
            M.assign (|
              ["x"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "x" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["y"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["product_raw"],
              Some (M.call (|
                "mul",
                [
                  M.get (| "x" |);
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["product"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "product_raw" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "iszero",
                [
                  M.call (|
                    "eq",
                    [
                      M.get (| "product" |);
                      M.get (| "product_raw" |)
                    ]
                  |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x11",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_mul",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "checked_mul_int8",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "panic_error_0x12",
          [],
          [],
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x12]
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |)
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "checked_div_int8",
          ["x"; "y"],
          ["r"],
          do* ltac:(M.monadic (
            M.assign (|
              ["x"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "x" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["y"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "iszero",
                [
                  M.get (| "y" |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x12",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "and",
                [
                  M.call (|
                    "eq",
                    [
                      M.get (| "x" |);
                      M.call (|
                        "not",
                        [
                          [Literal.number 127]
                        ]
                      |)
                    ]
                  |);
                  M.call (|
                    "eq",
                    [
                      M.get (| "y" |);
                      M.call (|
                        "sub",
                        [
                          [Literal.number 0];
                          [Literal.number 1]
                        ]
                      |)
                    ]
                  |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x11",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["r"],
              Some (M.call (|
                "sdiv",
                [
                  M.get (| "x" |);
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_div",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "checked_div_int8",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "mod_int8",
          ["x"; "y"],
          ["r"],
          do* ltac:(M.monadic (
            M.assign (|
              ["x"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "x" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["y"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "iszero",
                [
                  M.get (| "y" |)
                ]
              |),
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x12",
                    []
                  |)
                |)
              )) in
              M.od
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["r"],
              Some (M.call (|
                "smod",
                [
                  M.get (| "x" |);
                  M.get (| "y" |)
                ]
              |))
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_mod",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "mod_int8",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_bool",
          [],
          ["ret"],
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some ([Literal.number 0])
            |)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_eq",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_t_bool"],
              Some (M.call (|
                "zero_value_for_split_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_t_bool" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "eq",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_1" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_3" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_noteq",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_bool"],
              Some (M.call (|
                "zero_value_for_split_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_bool" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "iszero",
                [
                  M.call (|
                    "eq",
                    [
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "expr_1" |)
                        ]
                      |);
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "expr_3" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_lt",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_bool"],
              Some (M.call (|
                "zero_value_for_split_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_bool" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "slt",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_1" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_3" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_leq",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_bool"],
              Some (M.call (|
                "zero_value_for_split_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_bool" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "iszero",
                [
                  M.call (|
                    "sgt",
                    [
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "expr_1" |)
                        ]
                      |);
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "expr_3" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_gt",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_bool"],
              Some (M.call (|
                "zero_value_for_split_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_bool" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "sgt",
                [
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_1" |)
                    ]
                  |);
                  M.call (|
                    "cleanup_int8",
                    [
                      M.get (| "expr_3" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_geq",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_bool"],
              Some (M.call (|
                "zero_value_for_split_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_bool" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "iszero",
                [
                  M.call (|
                    "slt",
                    [
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "expr_1" |)
                        ]
                      |);
                      M.call (|
                        "cleanup_int8",
                        [
                          M.get (| "expr_3" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_bitor",
          ["var_x"; "var_y"],
          ["var_"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "or",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_bitand",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "and",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_bitxor",
          ["var_x"; "var_y"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_2"],
              Some (M.get (| "var_y" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.get (| "_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_4"],
              Some (M.call (|
                "xor",
                [
                  M.get (| "expr_1" |);
                  M.get (| "expr_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_5"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_5" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_bitnot",
          ["var_x"],
          ["var"],
          do* ltac:(M.monadic (
            M.assign (|
              ["zero_userDefinedValueType_Int"],
              Some (M.call (|
                "zero_value_for_split_userDefinedValueType_Int",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "zero_userDefinedValueType_Int" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["_1"],
              Some (M.get (| "var_x" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr"],
              Some (M.get (| "_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_1"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_2"],
              Some (M.call (|
                "cleanup_int8",
                [
                  M.call (|
                    "not",
                    [
                      M.get (| "expr_1" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["expr_3"],
              Some (M.call (|
                "convert_int8_to_int8",
                [
                  M.get (| "expr_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get (| "expr_3" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.od
        |)
      )) in
      do* ltac:(M.monadic (
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 64];
                M.call (|
                  "memoryguard",
                  [
                    [Literal.number 0x80]
                  ]
                |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.call (|
                      "calldatasize",
                      []
                    |);
                    [Literal.number 4]
                  ]
                |)
              ]
            |),
            do* ltac:(M.monadic (
              M.assign (|
                ["selector"],
                Some (M.call (|
                  "shift_right_unsigned",
                  [
                    M.call (|
                      "calldataload",
                      [
                        [Literal.number 0]
                      ]
                    |)
                  ]
                |))
              |)
            )) in
            do* ltac:(M.monadic (
              M.switch (|
                M.get (| "selector" |),
                [
                  (
                    Some (Literal.number 0x0f74a039),
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_testArithmetic",
                          []
                        |)
                      |)
                    )) in
                    M.od
                  );
                  (
                    Some (Literal.number 0x2135b4d9),
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_testComparison",
                          []
                        |)
                      |)
                    )) in
                    M.od
                  );
                  (
                    Some (Literal.number 0xcf9b9c17),
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_testBitwise",
                          []
                        |)
                      |)
                    )) in
                    M.od
                  );
                  (
                    None,
                    M.od
                  )          ]
              |)
            )) in
            M.od
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
              []
            |)
          |)
        )) in
        M.od
      )) in
      M.od.

    Definition data : string :=
      "a2646970667358221220b65af2a8bd08d1ea80644f50abb6b9194b6f08fa431681754cdd126861f3922c64736f6c634300081b0033".
  End C_785_deployed.
End C_785.
