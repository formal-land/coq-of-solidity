(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module L.
  Definition add (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.return_ (|
          M.call (|
            Ty.path "bytes2",
            [
              M.bin_op (|
                "+",
                M.call (|
                  Ty.path "uint16",
                  [
                    M.get_name (| "a" |)
                  ]
                |),
                M.call (|
                  Ty.path "uint16",
                  [
                    M.get_name (| "b" |)
                  ]
                |)
              |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 27
src: 154:19:0
nodeType: UsingForDirective
typeName: Ty.path "bytes2"
libraryName: (* Beginning of a node! *)
id: 25
src: 160:1:0
nodeType: IdentifierPath
name: L
nameLocations: [160:1:0, ]
referencedDeclaration: 24

global: 0


  Definition sum (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "a" |),
              "add"
            |),
            [
              M.get_name (| "b" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
