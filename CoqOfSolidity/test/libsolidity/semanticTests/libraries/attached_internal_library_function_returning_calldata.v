(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module D.
  Definition f (α : list Value.t) : M :=
    match α with
    | [_x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "_x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [_x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "_x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 24
src: 230:18:0
nodeType: UsingForDirective
typeName: Ty.path "bytes"
libraryName: (* Beginning of a node! *)
id: 22
src: 236:1:0
nodeType: IdentifierPath
name: D
nameLocations: [236:1:0, ]
referencedDeclaration: 21

global: 0


  Definition f (α : list Value.t) : M :=
    match α with
    | [_x] =>
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.index_access (|
              M.call (|
                M.member_access (|
                  M.get_name (| "_x" |),
                  "f"
                |),
                []
              |),
              Some (Value.Integer 0)
            |),
            M.index_access (|
              M.call (|
                M.member_access (|
                  M.get_name (| "_x" |),
                  "g"
                |),
                []
              |),
              Some (Value.Integer 0)
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
