(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module L.
  Definition transfer (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition send (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 16
src: 118:20:0
nodeType: UsingForDirective
typeName: Ty.path "address"
libraryName: (* Beginning of a node! *)
id: 14
src: 124:1:0
nodeType: IdentifierPath
name: L
nameLocations: [124:1:0, ]
referencedDeclaration: 13

global: 0


  Definition useTransfer (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "a" |),
            "transfer"
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition useSend (α : list Value.t) : M :=
    match α with
    | [a] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "a" |),
            "send"
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
