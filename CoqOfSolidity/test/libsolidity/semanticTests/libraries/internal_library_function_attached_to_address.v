(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module L.
  Definition equals (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "==",
            M.get_name (| "a" |),
            M.get_name (| "b" |)
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 18
src: 134:20:0
nodeType: UsingForDirective
typeName: Ty.path "address"
libraryName: (* Beginning of a node! *)
id: 16
src: 140:1:0
nodeType: IdentifierPath
name: L
nameLocations: [140:1:0, ]
referencedDeclaration: 15

global: 0


  Definition foo (α : list Value.t) : M :=
    match α with
    | [a, b] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "a" |),
              "equals"
            |),
            [
              M.get_name (| "b" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
