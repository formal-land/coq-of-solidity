(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Library *)
Module L.
  Definition selector (α : list Value.t) : M :=
    match α with
    | [f, x] =>
      let _ :=
        M.return_ (|
          M.bin_op (|
            "*",
            M.call (|
              M.get_name (| "f" |),
              [
                M.get_name (| "x" |)
              ]
            |),
            Value.Integer 2
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 32
src: 171:56:0
nodeType: UsingForDirective
typeName: (* Beginning of a node! *)
id: 31
src: 183:44:0
nodeType: FunctionTypeName
visibility: internal
stateMutability: pure
parameterTypes: (* Beginning of a node! *)
id: 27
src: 191:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
    undefined.

returnParameterTypes: (* Beginning of a node! *)
id: 30
src: 220:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
    undefined.

typeDescriptions: typeString function (uint256) pure returns (uint256)typeIdentifier st_function_internal_pure$_t_uint256_$returns$_t_uint256_$

libraryName: (* Beginning of a node! *)
id: 24
src: 177:1:0
nodeType: IdentifierPath
name: L
nameLocations: [177:1:0, ]
referencedDeclaration: 23

global: 0


  Definition identity (α : list Value.t) : M :=
    match α with
    | [x] =>
      let _ :=
        M.return_ (|
          M.get_name (| "x" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition test (α : list Value.t) : M :=
    match α with
    | [value] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "identity" |),
              "selector"
            |),
            [
              M.get_name (| "value" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
