(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [n, m] =>
      let _ :=
        M.define (|
          [ "arr" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 19
src: 106:36:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 18
src: 106:35:0
nodeType: FunctionTypeName
visibility: internal
stateMutability: nonpayable
parameterTypes: (* Beginning of a node! *)
id: 14
src: 114:2:0
nodeType: ParameterList
parameters: 

returnParameterTypes: (* Beginning of a node! *)
id: 17
src: 134:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
              undefined.

typeDescriptions: typeString function () returns (uint256)typeIdentifier st_function_internal_nonpayable$__$returns$_t_uint256_$

length: 
typeDescriptions: typeString function () returns (uint256)[]typeIdentifier st_array$_t_function_internal_nonpayable$__$returns$_t_uint256_$_$dyn_storage_ptr

,
            [
              M.get_name (| "n" |)
            ]
          |)
        |) in
      let _ :=
        M.call (|
          M.index_access (|
            M.get_name (| "arr" |),
            Some (M.get_name (| "m" |))
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f2 (α : list Value.t) : M :=
    match α with
    | [n, m, a, b] =>
      let _ :=
        M.define (|
          [ "arr" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 55
src: 274:38:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 54
src: 274:36:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 53
src: 274:35:0
nodeType: FunctionTypeName
visibility: internal
stateMutability: nonpayable
parameterTypes: (* Beginning of a node! *)
id: 49
src: 282:2:0
nodeType: ParameterList
parameters: 

returnParameterTypes: (* Beginning of a node! *)
id: 52
src: 302:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
              undefined.

typeDescriptions: typeString function () returns (uint256)typeIdentifier st_function_internal_nonpayable$__$returns$_t_uint256_$

length: 
typeDescriptions: typeString function () returns (uint256)[]typeIdentifier st_array$_t_function_internal_nonpayable$__$returns$_t_uint256_$_$dyn_storage_ptr

length: 
typeDescriptions: typeString function () returns (uint256)[][]typeIdentifier st_array$_t_array$_t_function_internal_nonpayable$__$returns$_t_uint256_$_$dyn_storage_$dyn_storage_ptr

,
            [
              M.get_name (| "n" |)
            ]
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 84
src: 319:84:0
nodeType: ForStatement
initializationExpression: M.define (|
          [ "i" ],
          Value.Integer 0
        |)
condition: M.bin_op (|
          "<",
          M.get_name (| "i" |),
          M.get_name (| "n" |)
        |)
loopExpression: M.un_op (|
          true,
          "++",
          M.get_name (| "i" |)
        |)
body: M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "arr" |),
            Some (M.get_name (| "i" |))
          |),
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 78
src: 364:36:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 77
src: 364:35:0
nodeType: FunctionTypeName
visibility: internal
stateMutability: nonpayable
parameterTypes: (* Beginning of a node! *)
id: 73
src: 372:2:0
nodeType: ParameterList
parameters: 

returnParameterTypes: (* Beginning of a node! *)
id: 76
src: 392:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
              undefined.

typeDescriptions: typeString function () returns (uint256)typeIdentifier st_function_internal_nonpayable$__$returns$_t_uint256_$

length: 
typeDescriptions: typeString function () returns (uint256)[]typeIdentifier st_array$_t_function_internal_nonpayable$__$returns$_t_uint256_$_$dyn_storage_ptr

,
            [
              M.get_name (| "m" |)
            ]
          |)
        |)
isSimpleCounterLoop: 1
 in
      let _ :=
        M.call (|
          M.index_access (|
            M.index_access (|
              M.get_name (| "arr" |),
              Some (M.get_name (| "a" |))
            |),
            Some (M.get_name (| "b" |))
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [n, m] =>
      let _ :=
        M.define (|
          [ "arr" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 112
src: 516:36:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 111
src: 516:35:0
nodeType: FunctionTypeName
visibility: external
stateMutability: nonpayable
parameterTypes: (* Beginning of a node! *)
id: 107
src: 524:2:0
nodeType: ParameterList
parameters: 

returnParameterTypes: (* Beginning of a node! *)
id: 110
src: 544:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
              undefined.

typeDescriptions: typeString function () external returns (uint256)typeIdentifier st_function_external_nonpayable$__$returns$_t_uint256_$

length: 
typeDescriptions: typeString function () external returns (uint256)[]typeIdentifier st_array$_t_function_external_nonpayable$__$returns$_t_uint256_$_$dyn_storage_ptr

,
            [
              M.get_name (| "n" |)
            ]
          |)
        |) in
      let _ :=
        M.call (|
          M.index_access (|
            M.get_name (| "arr" |),
            Some (M.get_name (| "m" |))
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g2 (α : list Value.t) : M :=
    match α with
    | [n, m, a, b] =>
      let _ :=
        M.define (|
          [ "arr" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 148
src: 684:38:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 147
src: 684:36:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 146
src: 684:35:0
nodeType: FunctionTypeName
visibility: external
stateMutability: nonpayable
parameterTypes: (* Beginning of a node! *)
id: 142
src: 692:2:0
nodeType: ParameterList
parameters: 

returnParameterTypes: (* Beginning of a node! *)
id: 145
src: 712:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
              undefined.

typeDescriptions: typeString function () external returns (uint256)typeIdentifier st_function_external_nonpayable$__$returns$_t_uint256_$

length: 
typeDescriptions: typeString function () external returns (uint256)[]typeIdentifier st_array$_t_function_external_nonpayable$__$returns$_t_uint256_$_$dyn_storage_ptr

length: 
typeDescriptions: typeString function () external returns (uint256)[][]typeIdentifier st_array$_t_array$_t_function_external_nonpayable$__$returns$_t_uint256_$_$dyn_storage_$dyn_storage_ptr

,
            [
              M.get_name (| "n" |)
            ]
          |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 177
src: 729:84:0
nodeType: ForStatement
initializationExpression: M.define (|
          [ "i" ],
          Value.Integer 0
        |)
condition: M.bin_op (|
          "<",
          M.get_name (| "i" |),
          M.get_name (| "n" |)
        |)
loopExpression: M.un_op (|
          true,
          "++",
          M.get_name (| "i" |)
        |)
body: M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "arr" |),
            Some (M.get_name (| "i" |))
          |),
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 171
src: 774:36:0
nodeType: ArrayTypeName
baseType: (* Beginning of a node! *)
id: 170
src: 774:35:0
nodeType: FunctionTypeName
visibility: external
stateMutability: nonpayable
parameterTypes: (* Beginning of a node! *)
id: 166
src: 782:2:0
nodeType: ParameterList
parameters: 

returnParameterTypes: (* Beginning of a node! *)
id: 169
src: 802:6:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
              undefined.

typeDescriptions: typeString function () external returns (uint256)typeIdentifier st_function_external_nonpayable$__$returns$_t_uint256_$

length: 
typeDescriptions: typeString function () external returns (uint256)[]typeIdentifier st_array$_t_function_external_nonpayable$__$returns$_t_uint256_$_$dyn_storage_ptr

,
            [
              M.get_name (| "m" |)
            ]
          |)
        |)
isSimpleCounterLoop: 1
 in
      let _ :=
        M.call (|
          M.index_access (|
            M.index_access (|
              M.get_name (| "arr" |),
              Some (M.get_name (| "a" |))
            |),
            Some (M.get_name (| "b" |))
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
