(* Generated by solc *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module C_243.
  Definition code : M.t unit := ltac:(M.monadic (
    let _ :=
      let _ :=
        M.call (|
          "mstore",
          [
            [Literal.number 64];
            M.call (|
              "memoryguard",
              [
                [Literal.number 0x80]
              ]
            |)
          ]
        |) in
      let _ :=
        M.if_ (|
          M.call (|
            "callvalue",
            []
          |),
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                []
              |) in
            tt
          ))
        |) in
      let _ :=
        M.assign (|
          ["_1"],
          Some (M.call (|
            "allocate_unbounded",
            []
          |))
        |) in
      let _ :=
        M.call (|
          "codecopy",
          [
            M.get (| "_1" |);
            M.call (|
              "dataoffset",
              [
                [Literal.string "435f3234335f6465706c6f796564"]
              ]
            |);
            M.call (|
              "datasize",
              [
                [Literal.string "435f3234335f6465706c6f796564"]
              ]
            |)
          ]
        |) in
      let _ :=
        M.call (|
          "return",
          [
            M.get (| "_1" |);
            M.call (|
              "datasize",
              [
                [Literal.string "435f3234335f6465706c6f796564"]
              ]
            |)
          ]
        |) in
      tt in
    let _ :=
      M.function (|
        "allocate_unbounded",
        [],
        ["memPtr"],
        ltac:(M.monadic (
          let _ :=
            M.declare (|
              ["memPtr"],
              M.call (|
                "mload",
                [
                  [Literal.number 64]
                ]
              |)
            |) in
          tt
        ))
      |) in
    let _ :=
      M.function (|
        "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
        [],
        [],
        ltac:(M.monadic (
          let _ :=
            M.call (|
              "revert",
              [
                [Literal.number 0];
                [Literal.number 0]
              ]
            |) in
          tt
        ))
      |) in
    tt
  )).

  Module C_243_deployed.
    Definition code : M.t unit := ltac:(M.monadic (
      let _ :=
        let _ :=
          M.call (|
            "mstore",
            [
              [Literal.number 64];
              M.call (|
                "memoryguard",
                [
                  [Literal.number 0x80]
                ]
              |)
            ]
          |) in
        let _ :=
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.call (|
                      "calldatasize",
                      []
                    |);
                    [Literal.number 4]
                  ]
                |)
              ]
            |),
            ltac:(M.monadic (
              let _ :=
                M.assign (|
                  ["selector"],
                  Some (M.call (|
                    "shift_right_unsigned",
                    [
                      M.call (|
                        "calldataload",
                        [
                          [Literal.number 0]
                        ]
                      |)
                    ]
                  |))
                |) in
              let _ :=
                M.switch (|
                  M.get (| "selector" |),
                  [
                    (
                      Some (Literal.number 0x26121ff0),
                      ltac:(M.monadic (
                        let _ :=
                          M.call (|
                            "external_fun_f",
                            []
                          |) in
                        tt
                      ))              );
                    (
                      None,
                      ltac:(M.monadic (
                        tt
                      ))              )            ]
                |) in
              tt
            ))
          |) in
        let _ :=
          M.call (|
            "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
            []
          |) in
        tt in
      let _ :=
        M.function (|
          "shift_right_unsigned",
          ["value"],
          ["newValue"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["newValue"],
                M.call (|
                  "shr",
                  [
                    [Literal.number 224];
                    M.get (| "value" |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "allocate_unbounded",
          [],
          ["memPtr"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["memPtr"],
                M.call (|
                  "mload",
                  [
                    [Literal.number 64]
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "abi_decode",
          ["headStart"; "dataEnd"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "slt",
                  [
                    M.call (|
                      "sub",
                      [
                        M.get (| "dataEnd" |);
                        M.get (| "headStart" |)
                      ]
                    |);
                    [Literal.number 0]
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                      []
                    |) in
                  tt
                ))
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_uint256",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "abi_encode_uint256_to_uint256",
          ["value"; "pos"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "mstore",
                [
                  M.get (| "pos" |);
                  M.call (|
                    "cleanup_uint256",
                    [
                      M.get (| "value" |)
                    ]
                  |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "abi_encode_uint256",
          ["headStart"; "value0"],
          ["tail"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["tail"],
                M.call (|
                  "add",
                  [
                    M.get (| "headStart" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.call (|
                "abi_encode_uint256_to_uint256",
                [
                  M.get (| "value0" |);
                  M.call (|
                    "add",
                    [
                      M.get (| "headStart" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "external_fun_f",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "callvalue",
                  []
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                      []
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.call (|
                "abi_decode",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["ret"],
                Some (M.call (|
                  "fun_f",
                  []
                |))
              |) in
            let _ :=
              M.assign (|
                ["memPos"],
                Some (M.call (|
                  "allocate_unbounded",
                  []
                |))
              |) in
            let _ :=
              M.assign (|
                ["memEnd"],
                Some (M.call (|
                  "abi_encode_uint256",
                  [
                    M.get (| "memPos" |);
                    M.get (| "ret" |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "return",
                [
                  M.get (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get (| "memEnd" |);
                      M.get (| "memPos" |)
                    ]
                  |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "zero_value_for_split_uint256",
          [],
          ["ret"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["ret"],
                [Literal.number 0]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_by_1",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "identity",
          ["value"],
          ["ret"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["ret"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_42_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_by_1",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "round_up_to_mul_of",
          ["value"],
          ["result"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["result"],
                M.call (|
                  "and",
                  [
                    M.call (|
                      "add",
                      [
                        M.get (| "value" |);
                        [Literal.number 31]
                      ]
                    |);
                    M.call (|
                      "not",
                      [
                        [Literal.number 31]
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "panic_error_0x41",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x41]
                ]
              |) in
            let _ :=
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "finalize_allocation",
          ["memPtr"; "size"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.assign (|
                ["newFreePtr"],
                Some (M.call (|
                  "add",
                  [
                    M.get (| "memPtr" |);
                    M.call (|
                      "round_up_to_mul_of",
                      [
                        M.get (| "size" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.if_ (|
                M.call (|
                  "or",
                  [
                    M.call (|
                      "gt",
                      [
                        M.get (| "newFreePtr" |);
                        [Literal.number 0xffffffffffffffff]
                      ]
                    |);
                    M.call (|
                      "lt",
                      [
                        M.get (| "newFreePtr" |);
                        M.get (| "memPtr" |)
                      ]
                    |)
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "panic_error_0x41",
                      []
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 64];
                  M.get (| "newFreePtr" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "allocate_memory",
          ["size"],
          ["memPtr"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["memPtr"],
                M.call (|
                  "allocate_unbounded",
                  []
                |)
              |) in
            let _ :=
              M.call (|
                "finalize_allocation",
                [
                  M.get (| "memPtr" |);
                  M.get (| "size" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "array_allocation_size_array_array_uint256_dyn_dyn",
          ["length"],
          ["size"],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "gt",
                  [
                    M.get (| "length" |);
                    [Literal.number 0xffffffffffffffff]
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "panic_error_0x41",
                      []
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.declare (|
                ["size"],
                M.call (|
                  "mul",
                  [
                    M.get (| "length" |);
                    [Literal.number 0x20]
                  ]
                |)
              |) in
            let _ :=
              M.declare (|
                ["size"],
                M.call (|
                  "add",
                  [
                    M.get (| "size" |);
                    [Literal.number 0x20]
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "allocate_memory_array_array_array_uint256_dyn_dyn",
          ["length"],
          ["memPtr"],
          ltac:(M.monadic (
            let _ :=
              M.assign (|
                ["allocSize"],
                Some (M.call (|
                  "array_allocation_size_array_array_uint256_dyn_dyn",
                  [
                    M.get (| "length" |)
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["memPtr"],
                M.call (|
                  "allocate_memory",
                  [
                    M.get (| "allocSize" |)
                  ]
                |)
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.get (| "memPtr" |);
                  M.get (| "length" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "zero_value_for_array_uint256_dyn",
          [],
          ["ret"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["ret"],
                [Literal.number 96]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "zero_complex_memory_array_array_array_uint256_dyn_dyn",
          ["dataStart"; "dataSizeInBytes"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.assign (|
                ["i"],
                Some ([Literal.number 0])
              |) in
            let _ :=
              let _ :=
                tt in
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get (| "i" |);
                    M.get (| "dataSizeInBytes" |)
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.declare (|
                      ["i"],
                      M.call (|
                        "add",
                        [
                          M.get (| "i" |);
                          [Literal.number 32]
                        ]
                      |)
                    |) in
                  tt
                )),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "mstore",
                      [
                        M.call (|
                          "add",
                          [
                            M.get (| "dataStart" |);
                            M.get (| "i" |)
                          ]
                        |);
                        M.call (|
                          "zero_value_for_array_uint256_dyn",
                          []
                        |)
                      ]
                    |) in
                  tt
                ))
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "allocate_and_zero_memory_array_array_array_uint256_dyn_dyn",
          ["length"],
          ["memPtr"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["memPtr"],
                M.call (|
                  "allocate_memory_array_array_array_uint256_dyn_dyn",
                  [
                    M.get (| "length" |)
                  ]
                |)
              |) in
            let _ :=
              M.assign (|
                ["dataStart"],
                Some (M.get (| "memPtr" |))
              |) in
            let _ :=
              M.assign (|
                ["dataSize"],
                Some (M.call (|
                  "array_allocation_size_array_array_uint256_dyn_dyn",
                  [
                    M.get (| "length" |)
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["dataStart"],
                M.call (|
                  "add",
                  [
                    M.get (| "dataStart" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.declare (|
                ["dataSize"],
                M.call (|
                  "sub",
                  [
                    M.get (| "dataSize" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.call (|
                "zero_complex_memory_array_array_array_uint256_dyn_dyn",
                [
                  M.get (| "dataStart" |);
                  M.get (| "dataSize" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "panic_error_0x32",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x32]
                ]
              |) in
            let _ :=
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "array_length_array_array_uint256_dyn_dyn",
          ["value"],
          ["length"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["length"],
                M.call (|
                  "mload",
                  [
                    M.get (| "value" |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "memory_array_index_access_uint256_dyn_dyn",
          ["baseRef"; "index"],
          ["addr"],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "iszero",
                  [
                    M.call (|
                      "lt",
                      [
                        M.get (| "index" |);
                        M.call (|
                          "array_length_array_array_uint256_dyn_dyn",
                          [
                            M.get (| "baseRef" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "panic_error_0x32",
                      []
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.assign (|
                ["offset"],
                Some (M.call (|
                  "mul",
                  [
                    M.get (| "index" |);
                    [Literal.number 32]
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["offset"],
                M.call (|
                  "add",
                  [
                    M.get (| "offset" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.declare (|
                ["addr"],
                M.call (|
                  "add",
                  [
                    M.get (| "baseRef" |);
                    M.get (| "offset" |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_0_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_0_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_0_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "array_length_array_uint256_dyn",
          ["value"],
          ["length"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["length"],
                M.call (|
                  "mload",
                  [
                    M.get (| "value" |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "panic_error_0x01",
          [],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x01]
                ]
              |) in
            let _ :=
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "assert_helper",
          ["condition"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "iszero",
                  [
                    M.get (| "condition" |)
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "panic_error_0x01",
                      []
                    |) in
                  tt
                ))
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_t_rational_by_1",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_1_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_t_rational_by_1",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "array_allocation_size_array_uint256_dyn",
          ["length"],
          ["size"],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "gt",
                  [
                    M.get (| "length" |);
                    [Literal.number 0xffffffffffffffff]
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "panic_error_0x41",
                      []
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.declare (|
                ["size"],
                M.call (|
                  "mul",
                  [
                    M.get (| "length" |);
                    [Literal.number 0x20]
                  ]
                |)
              |) in
            let _ :=
              M.declare (|
                ["size"],
                M.call (|
                  "add",
                  [
                    M.get (| "size" |);
                    [Literal.number 0x20]
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "allocate_memory_array_array_uint256_dyn",
          ["length"],
          ["memPtr"],
          ltac:(M.monadic (
            let _ :=
              M.assign (|
                ["allocSize"],
                Some (M.call (|
                  "array_allocation_size_array_uint256_dyn",
                  [
                    M.get (| "length" |)
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["memPtr"],
                M.call (|
                  "allocate_memory",
                  [
                    M.get (| "allocSize" |)
                  ]
                |)
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.get (| "memPtr" |);
                  M.get (| "length" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "zero_memory_chunk_uint256",
          ["dataStart"; "dataSizeInBytes"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "calldatacopy",
                [
                  M.get (| "dataStart" |);
                  M.call (|
                    "calldatasize",
                    []
                  |);
                  M.get (| "dataSizeInBytes" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "allocate_and_zero_memory_array_array_uint256_dyn",
          ["length"],
          ["memPtr"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["memPtr"],
                M.call (|
                  "allocate_memory_array_array_uint256_dyn",
                  [
                    M.get (| "length" |)
                  ]
                |)
              |) in
            let _ :=
              M.assign (|
                ["dataStart"],
                Some (M.get (| "memPtr" |))
              |) in
            let _ :=
              M.assign (|
                ["dataSize"],
                Some (M.call (|
                  "array_allocation_size_array_uint256_dyn",
                  [
                    M.get (| "length" |)
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["dataStart"],
                M.call (|
                  "add",
                  [
                    M.get (| "dataStart" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.declare (|
                ["dataSize"],
                M.call (|
                  "sub",
                  [
                    M.get (| "dataSize" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.call (|
                "zero_memory_chunk_uint256",
                [
                  M.get (| "dataStart" |);
                  M.get (| "dataSize" |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "memory_array_index_access_uint256_dyn",
          ["baseRef"; "index"],
          ["addr"],
          ltac:(M.monadic (
            let _ :=
              M.if_ (|
                M.call (|
                  "iszero",
                  [
                    M.call (|
                      "lt",
                      [
                        M.get (| "index" |);
                        M.call (|
                          "array_length_array_uint256_dyn",
                          [
                            M.get (| "baseRef" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |),
                ltac:(M.monadic (
                  let _ :=
                    M.call (|
                      "panic_error_0x32",
                      []
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.assign (|
                ["offset"],
                Some (M.call (|
                  "mul",
                  [
                    M.get (| "index" |);
                    [Literal.number 32]
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["offset"],
                M.call (|
                  "add",
                  [
                    M.get (| "offset" |);
                    [Literal.number 32]
                  ]
                |)
              |) in
            let _ :=
              M.declare (|
                ["addr"],
                M.call (|
                  "add",
                  [
                    M.get (| "baseRef" |);
                    M.get (| "offset" |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "write_to_memory_uint256",
          ["memPtr"; "value"],
          [],
          ltac:(M.monadic (
            let _ :=
              M.call (|
                "mstore",
                [
                  M.get (| "memPtr" |);
                  M.call (|
                    "cleanup_uint256",
                    [
                      M.get (| "value" |)
                    ]
                  |)
                ]
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_4_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_2_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_2_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_2_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_10_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_by_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_10_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_44_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_44_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_44_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_24_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_24_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_24_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_rational_88_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_t_rational_by_to_t_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_rational_88_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "read_from_memoryt_uint256",
          ["ptr"],
          ["returnValue"],
          ltac:(M.monadic (
            let _ :=
              M.assign (|
                ["value"],
                Some (M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "mload",
                      [
                        M.get (| "ptr" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.declare (|
                ["returnValue"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "cleanup_t_rational_by",
          ["value"],
          ["cleaned"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["cleaned"],
                M.get (| "value" |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "convert_rational_7_by_1_to_uint256",
          ["value"],
          ["converted"],
          ltac:(M.monadic (
            let _ :=
              M.declare (|
                ["converted"],
                M.call (|
                  "cleanup_uint256",
                  [
                    M.call (|
                      "identity",
                      [
                        M.call (|
                          "cleanup_t_rational_by",
                          [
                            M.get (| "value" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            tt
          ))
        |) in
      let _ :=
        M.function (|
          "fun_f",
          [],
          ["var"],
          ltac:(M.monadic (
            let _ :=
              M.assign (|
                ["zero_uint256"],
                Some (M.call (|
                  "zero_value_for_split_uint256",
                  []
                |))
              |) in
            let _ :=
              M.declare (|
                ["var"],
                M.get (| "zero_uint256" |)
              |) in
            let _ :=
              M.assign (|
                ["expr"],
                Some ([Literal.number 0x2a])
              |) in
            let _ :=
              M.assign (|
                ["_1"],
                Some (M.call (|
                  "convert_rational_42_by_1_to_uint256",
                  [
                    M.get (| "expr" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_16_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_array_uint256_dyn_dyn",
                  [
                    M.get (| "_1" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["var_x_mpos"],
                Some (M.get (| "expr_16_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["_3_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_19_mpos"],
                Some (M.get (| "_3_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_1"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_4_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_19_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_1" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_21_mpos"],
                Some (M.get (| "_4_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_2"],
                Some (M.call (|
                  "array_length_array_uint256_dyn",
                  [
                    M.get (| "expr_21_mpos" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_3"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["expr_4"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_2" |)
                      ]
                    |);
                    M.call (|
                      "convert_rational_0_by_1_to_uint256",
                      [
                        M.get (| "expr_3" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_4" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_5"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_2"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_5" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_34_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_uint256_dyn",
                  [
                    M.get (| "_2" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_27_mpos"],
                Some (M.get (| "_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_6"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn_dyn",
                    [
                      M.get (| "expr_27_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_6" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "expr_34_mpos" |)
                ]
              |) in
            let _ :=
              M.call (|
                "pop",
                [
                  M.call (|
                    "mload",
                    [
                      M.call (|
                        "memory_array_index_access_uint256_dyn_dyn",
                        [
                          M.get (| "expr_27_mpos" |);
                          M.call (|
                            "convert_rational_0_by_1_to_uint256",
                            [
                              M.get (| "expr_6" |)
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_7"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_3"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_7" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_9_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_37_mpos"],
                Some (M.get (| "_9_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_8"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_10_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_37_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_8" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_40_mpos"],
                Some (M.get (| "_10_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_9"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_4"],
                Some (M.get (| "_3" |))
              |) in
            let _ :=
              M.call (|
                "write_to_memory_uint256",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn",
                    [
                      M.get (| "expr_40_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_9" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "_4" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["_12_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_46_mpos"],
                Some (M.get (| "_12_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_10"],
                Some ([Literal.number 0x04])
              |) in
            let _ :=
              M.assign (|
                ["_13_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_46_mpos" |);
                        M.call (|
                          "convert_rational_4_by_1_to_uint256",
                          [
                            M.get (| "expr_10" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_48_mpos"],
                Some (M.get (| "_13_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_11"],
                Some (M.call (|
                  "array_length_array_uint256_dyn",
                  [
                    M.get (| "expr_48_mpos" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_12"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["expr_13"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_11" |)
                      ]
                    |);
                    M.call (|
                      "convert_rational_0_by_1_to_uint256",
                      [
                        M.get (| "expr_12" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_13" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_14"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_5"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_14" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_61_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_uint256_dyn",
                  [
                    M.get (| "_5" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_15_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_54_mpos"],
                Some (M.get (| "_15_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_15"],
                Some ([Literal.number 0x04])
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn_dyn",
                    [
                      M.get (| "expr_54_mpos" |);
                      M.call (|
                        "convert_rational_4_by_1_to_uint256",
                        [
                          M.get (| "expr_15" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "expr_61_mpos" |)
                ]
              |) in
            let _ :=
              M.call (|
                "pop",
                [
                  M.call (|
                    "mload",
                    [
                      M.call (|
                        "memory_array_index_access_uint256_dyn_dyn",
                        [
                          M.get (| "expr_54_mpos" |);
                          M.call (|
                            "convert_rational_4_by_1_to_uint256",
                            [
                              M.get (| "expr_15" |)
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_16"],
                Some ([Literal.number 0x02])
              |) in
            let _ :=
              M.assign (|
                ["_6"],
                Some (M.call (|
                  "convert_rational_2_by_1_to_uint256",
                  [
                    M.get (| "expr_16" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_18_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_64_mpos"],
                Some (M.get (| "_18_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_17"],
                Some ([Literal.number 0x04])
              |) in
            let _ :=
              M.assign (|
                ["_19_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_64_mpos" |);
                        M.call (|
                          "convert_rational_4_by_1_to_uint256",
                          [
                            M.get (| "expr_17" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_67_mpos"],
                Some (M.get (| "_19_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_18"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_7"],
                Some (M.get (| "_6" |))
              |) in
            let _ :=
              M.call (|
                "write_to_memory_uint256",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn",
                    [
                      M.get (| "expr_67_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_18" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "_7" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["_21_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_73_mpos"],
                Some (M.get (| "_21_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_19"],
                Some ([Literal.number 0x0a])
              |) in
            let _ :=
              M.assign (|
                ["_22_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_73_mpos" |);
                        M.call (|
                          "convert_rational_by_to_uint256",
                          [
                            M.get (| "expr_19" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_75_mpos"],
                Some (M.get (| "_22_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_20"],
                Some (M.call (|
                  "array_length_array_uint256_dyn",
                  [
                    M.get (| "expr_75_mpos" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_21"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["expr_22"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_20" |)
                      ]
                    |);
                    M.call (|
                      "convert_rational_0_by_1_to_uint256",
                      [
                        M.get (| "expr_21" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_22" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_23"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_8"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_23" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_88_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_uint256_dyn",
                  [
                    M.get (| "_8" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_24_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_81_mpos"],
                Some (M.get (| "_24_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_24"],
                Some ([Literal.number 0x0a])
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn_dyn",
                    [
                      M.get (| "expr_81_mpos" |);
                      M.call (|
                        "convert_rational_by_to_uint256",
                        [
                          M.get (| "expr_24" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "expr_88_mpos" |)
                ]
              |) in
            let _ :=
              M.call (|
                "pop",
                [
                  M.call (|
                    "mload",
                    [
                      M.call (|
                        "memory_array_index_access_uint256_dyn_dyn",
                        [
                          M.get (| "expr_81_mpos" |);
                          M.call (|
                            "convert_rational_by_to_uint256",
                            [
                              M.get (| "expr_24" |)
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_25"],
                Some ([Literal.number 0x2c])
              |) in
            let _ :=
              M.assign (|
                ["_9"],
                Some (M.call (|
                  "convert_rational_44_by_1_to_uint256",
                  [
                    M.get (| "expr_25" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_27_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_91_mpos"],
                Some (M.get (| "_27_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_26"],
                Some ([Literal.number 0x0a])
              |) in
            let _ :=
              M.assign (|
                ["_28_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_91_mpos" |);
                        M.call (|
                          "convert_rational_by_to_uint256",
                          [
                            M.get (| "expr_26" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_94_mpos"],
                Some (M.get (| "_28_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_27"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_10"],
                Some (M.get (| "_9" |))
              |) in
            let _ :=
              M.call (|
                "write_to_memory_uint256",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn",
                    [
                      M.get (| "expr_94_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_27" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "_10" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_28"],
                Some ([Literal.number 0x18])
              |) in
            let _ :=
              M.assign (|
                ["_11"],
                Some (M.call (|
                  "convert_rational_24_by_1_to_uint256",
                  [
                    M.get (| "expr_28" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_110_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_array_uint256_dyn_dyn",
                  [
                    M.get (| "_11" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["var_y_mpos"],
                Some (M.get (| "expr_110_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["_31_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_113_mpos"],
                Some (M.get (| "_31_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_29"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_32_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_113_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_29" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_115_mpos"],
                Some (M.get (| "_32_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_30"],
                Some (M.call (|
                  "array_length_array_uint256_dyn",
                  [
                    M.get (| "expr_115_mpos" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_31"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["expr_32"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_30" |)
                      ]
                    |);
                    M.call (|
                      "convert_rational_0_by_1_to_uint256",
                      [
                        M.get (| "expr_31" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_32" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_33"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_12"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_33" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_128_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_uint256_dyn",
                  [
                    M.get (| "_12" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_34_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_121_mpos"],
                Some (M.get (| "_34_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_34"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn_dyn",
                    [
                      M.get (| "expr_121_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_34" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "expr_128_mpos" |)
                ]
              |) in
            let _ :=
              M.call (|
                "pop",
                [
                  M.call (|
                    "mload",
                    [
                      M.call (|
                        "memory_array_index_access_uint256_dyn_dyn",
                        [
                          M.get (| "expr_121_mpos" |);
                          M.call (|
                            "convert_rational_0_by_1_to_uint256",
                            [
                              M.get (| "expr_34" |)
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_35"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_13"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_35" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_37_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_131_mpos"],
                Some (M.get (| "_37_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_36"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_38_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_131_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_36" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_mpos"],
                Some (M.get (| "_38_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_37"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_14"],
                Some (M.get (| "_13" |))
              |) in
            let _ :=
              M.call (|
                "write_to_memory_uint256",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn",
                    [
                      M.get (| "expr_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_37" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "_14" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["_40_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_140_mpos"],
                Some (M.get (| "_40_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_38"],
                Some ([Literal.number 0x04])
              |) in
            let _ :=
              M.assign (|
                ["_41_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_140_mpos" |);
                        M.call (|
                          "convert_rational_4_by_1_to_uint256",
                          [
                            M.get (| "expr_38" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_142_mpos"],
                Some (M.get (| "_41_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_39"],
                Some (M.call (|
                  "array_length_array_uint256_dyn",
                  [
                    M.get (| "expr_142_mpos" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_40"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["expr_41"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_39" |)
                      ]
                    |);
                    M.call (|
                      "convert_rational_0_by_1_to_uint256",
                      [
                        M.get (| "expr_40" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_41" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_42"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_15"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_42" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_155_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_uint256_dyn",
                  [
                    M.get (| "_15" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_43_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_148_mpos"],
                Some (M.get (| "_43_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_43"],
                Some ([Literal.number 0x04])
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn_dyn",
                    [
                      M.get (| "expr_148_mpos" |);
                      M.call (|
                        "convert_rational_4_by_1_to_uint256",
                        [
                          M.get (| "expr_43" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "expr_155_mpos" |)
                ]
              |) in
            let _ :=
              M.call (|
                "pop",
                [
                  M.call (|
                    "mload",
                    [
                      M.call (|
                        "memory_array_index_access_uint256_dyn_dyn",
                        [
                          M.get (| "expr_148_mpos" |);
                          M.call (|
                            "convert_rational_4_by_1_to_uint256",
                            [
                              M.get (| "expr_43" |)
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_44"],
                Some ([Literal.number 0x02])
              |) in
            let _ :=
              M.assign (|
                ["_16"],
                Some (M.call (|
                  "convert_rational_2_by_1_to_uint256",
                  [
                    M.get (| "expr_44" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_46_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_158_mpos"],
                Some (M.get (| "_46_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_45"],
                Some ([Literal.number 0x04])
              |) in
            let _ :=
              M.assign (|
                ["_47_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_158_mpos" |);
                        M.call (|
                          "convert_rational_4_by_1_to_uint256",
                          [
                            M.get (| "expr_45" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_161_mpos"],
                Some (M.get (| "_47_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_46"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_17"],
                Some (M.get (| "_16" |))
              |) in
            let _ :=
              M.call (|
                "write_to_memory_uint256",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn",
                    [
                      M.get (| "expr_161_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_46" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "_17" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["_49_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_167_mpos"],
                Some (M.get (| "_49_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_47"],
                Some ([Literal.number 0x0a])
              |) in
            let _ :=
              M.assign (|
                ["_50_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_167_mpos" |);
                        M.call (|
                          "convert_rational_by_to_uint256",
                          [
                            M.get (| "expr_47" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_169_mpos"],
                Some (M.get (| "_50_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_48"],
                Some (M.call (|
                  "array_length_array_uint256_dyn",
                  [
                    M.get (| "expr_169_mpos" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_49"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["expr_50"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_48" |)
                      ]
                    |);
                    M.call (|
                      "convert_rational_0_by_1_to_uint256",
                      [
                        M.get (| "expr_49" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.call (|
                "assert_helper",
                [
                  M.get (| "expr_50" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_51"],
                Some ([Literal.number 0x01])
              |) in
            let _ :=
              M.assign (|
                ["_18"],
                Some (M.call (|
                  "convert_rational_1_by_1_to_uint256",
                  [
                    M.get (| "expr_51" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_182_mpos"],
                Some (M.call (|
                  "allocate_and_zero_memory_array_array_uint256_dyn",
                  [
                    M.get (| "_18" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_52_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_175_mpos"],
                Some (M.get (| "_52_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_52"],
                Some ([Literal.number 0x0a])
              |) in
            let _ :=
              M.call (|
                "mstore",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn_dyn",
                    [
                      M.get (| "expr_175_mpos" |);
                      M.call (|
                        "convert_rational_by_to_uint256",
                        [
                          M.get (| "expr_52" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "expr_182_mpos" |)
                ]
              |) in
            let _ :=
              M.call (|
                "pop",
                [
                  M.call (|
                    "mload",
                    [
                      M.call (|
                        "memory_array_index_access_uint256_dyn_dyn",
                        [
                          M.get (| "expr_175_mpos" |);
                          M.call (|
                            "convert_rational_by_to_uint256",
                            [
                              M.get (| "expr_52" |)
                            ]
                          |)
                        ]
                      |)
                    ]
                  |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["expr_53"],
                Some ([Literal.number 0x58])
              |) in
            let _ :=
              M.assign (|
                ["_19"],
                Some (M.call (|
                  "convert_t_rational_by_to_t_uint256",
                  [
                    M.get (| "expr_53" |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["_55_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_185_mpos"],
                Some (M.get (| "_55_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_54"],
                Some ([Literal.number 0x0a])
              |) in
            let _ :=
              M.assign (|
                ["_56_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_185_mpos" |);
                        M.call (|
                          "convert_rational_by_to_uint256",
                          [
                            M.get (| "expr_54" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_188_mpos"],
                Some (M.get (| "_56_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_55"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_20"],
                Some (M.get (| "_19" |))
              |) in
            let _ :=
              M.call (|
                "write_to_memory_uint256",
                [
                  M.call (|
                    "memory_array_index_access_uint256_dyn",
                    [
                      M.get (| "expr_188_mpos" |);
                      M.call (|
                        "convert_rational_0_by_1_to_uint256",
                        [
                          M.get (| "expr_55" |)
                        ]
                      |)
                    ]
                  |);
                  M.get (| "_20" |)
                ]
              |) in
            let _ :=
              M.assign (|
                ["_58_mpos"],
                Some (M.get (| "var_x_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_193_mpos"],
                Some (M.get (| "_58_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_56"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_59_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_193_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_56" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_195_mpos"],
                Some (M.get (| "_59_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_57"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_21"],
                Some (M.call (|
                  "read_from_memoryt_uint256",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn",
                      [
                        M.get (| "expr_195_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_57" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_58"],
                Some (M.get (| "_21" |))
              |) in
            let _ :=
              M.assign (|
                ["_61_mpos"],
                Some (M.get (| "var_y_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_198_mpos"],
                Some (M.get (| "_61_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_59"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_62_mpos"],
                Some (M.call (|
                  "mload",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn_dyn",
                      [
                        M.get (| "expr_198_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_59" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_200_mpos"],
                Some (M.get (| "_62_mpos" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_60"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.assign (|
                ["_22"],
                Some (M.call (|
                  "read_from_memoryt_uint256",
                  [
                    M.call (|
                      "memory_array_index_access_uint256_dyn",
                      [
                        M.get (| "expr_200_mpos" |);
                        M.call (|
                          "convert_rational_0_by_1_to_uint256",
                          [
                            M.get (| "expr_60" |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_61"],
                Some (M.get (| "_22" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_62"],
                Some (M.call (|
                  "eq",
                  [
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_58" |)
                      ]
                    |);
                    M.call (|
                      "cleanup_uint256",
                      [
                        M.get (| "expr_61" |)
                      ]
                    |)
                  ]
                |))
              |) in
            let _ :=
              M.assign (|
                ["expr_63"],
                Some (M.get (| "expr_62" |))
              |) in
            let _ :=
              M.assign (|
                ["expr_64"],
                Some (M.get (| "expr_63" |))
              |) in
            let _ :=
              M.if_ (|
                M.get (| "expr_64" |),
                ltac:(M.monadic (
                  let _ :=
                    M.assign (|
                      ["_64_mpos"],
                      Some (M.get (| "var_x_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_205_mpos"],
                      Some (M.get (| "_64_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_65"],
                      Some ([Literal.number 0x04])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_65_mpos"],
                      Some (M.call (|
                        "mload",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn_dyn",
                            [
                              M.get (| "expr_205_mpos" |);
                              M.call (|
                                "convert_rational_4_by_1_to_uint256",
                                [
                                  M.get (| "expr_65" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_207_mpos"],
                      Some (M.get (| "_65_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_66"],
                      Some ([Literal.number 0x00])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_23"],
                      Some (M.call (|
                        "read_from_memoryt_uint256",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn",
                            [
                              M.get (| "expr_207_mpos" |);
                              M.call (|
                                "convert_rational_0_by_1_to_uint256",
                                [
                                  M.get (| "expr_66" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_67"],
                      Some (M.get (| "_23" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["_67_mpos"],
                      Some (M.get (| "var_y_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_210_mpos"],
                      Some (M.get (| "_67_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_68"],
                      Some ([Literal.number 0x04])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_68_mpos"],
                      Some (M.call (|
                        "mload",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn_dyn",
                            [
                              M.get (| "expr_210_mpos" |);
                              M.call (|
                                "convert_rational_4_by_1_to_uint256",
                                [
                                  M.get (| "expr_68" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_212_mpos"],
                      Some (M.get (| "_68_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_69"],
                      Some ([Literal.number 0x00])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_24"],
                      Some (M.call (|
                        "read_from_memoryt_uint256",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn",
                            [
                              M.get (| "expr_212_mpos" |);
                              M.call (|
                                "convert_rational_0_by_1_to_uint256",
                                [
                                  M.get (| "expr_69" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_70"],
                      Some (M.get (| "_24" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_71"],
                      Some (M.call (|
                        "eq",
                        [
                          M.call (|
                            "cleanup_uint256",
                            [
                              M.get (| "expr_67" |)
                            ]
                          |);
                          M.call (|
                            "cleanup_uint256",
                            [
                              M.get (| "expr_70" |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_72"],
                      Some (M.get (| "expr_71" |))
                    |) in
                  let _ :=
                    M.declare (|
                      ["expr_64"],
                      M.get (| "expr_72" |)
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.assign (|
                ["expr_73"],
                Some (M.get (| "expr_64" |))
              |) in
            let _ :=
              M.if_ (|
                M.get (| "expr_73" |),
                ltac:(M.monadic (
                  let _ :=
                    M.assign (|
                      ["_70_mpos"],
                      Some (M.get (| "var_x_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_218_mpos"],
                      Some (M.get (| "_70_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_74"],
                      Some ([Literal.number 0x0a])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_71_mpos"],
                      Some (M.call (|
                        "mload",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn_dyn",
                            [
                              M.get (| "expr_218_mpos" |);
                              M.call (|
                                "convert_rational_by_to_uint256",
                                [
                                  M.get (| "expr_74" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_220_mpos"],
                      Some (M.get (| "_71_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_75"],
                      Some ([Literal.number 0x00])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_25"],
                      Some (M.call (|
                        "read_from_memoryt_uint256",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn",
                            [
                              M.get (| "expr_220_mpos" |);
                              M.call (|
                                "convert_rational_0_by_1_to_uint256",
                                [
                                  M.get (| "expr_75" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_76"],
                      Some (M.get (| "_25" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_77"],
                      Some ([Literal.number 0x2c])
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_78"],
                      Some (M.call (|
                        "eq",
                        [
                          M.call (|
                            "cleanup_uint256",
                            [
                              M.get (| "expr_76" |)
                            ]
                          |);
                          M.call (|
                            "convert_rational_44_by_1_to_uint256",
                            [
                              M.get (| "expr_77" |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_79"],
                      Some (M.get (| "expr_78" |))
                    |) in
                  let _ :=
                    M.declare (|
                      ["expr_73"],
                      M.get (| "expr_79" |)
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.assign (|
                ["expr_80"],
                Some (M.get (| "expr_73" |))
              |) in
            let _ :=
              M.if_ (|
                M.get (| "expr_80" |),
                ltac:(M.monadic (
                  let _ :=
                    M.assign (|
                      ["_73_mpos"],
                      Some (M.get (| "var_y_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_227_mpos"],
                      Some (M.get (| "_73_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_81"],
                      Some ([Literal.number 0x0a])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_74_mpos"],
                      Some (M.call (|
                        "mload",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn_dyn",
                            [
                              M.get (| "expr_227_mpos" |);
                              M.call (|
                                "convert_rational_by_to_uint256",
                                [
                                  M.get (| "expr_81" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_229_mpos"],
                      Some (M.get (| "_74_mpos" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_82"],
                      Some ([Literal.number 0x00])
                    |) in
                  let _ :=
                    M.assign (|
                      ["_26"],
                      Some (M.call (|
                        "read_from_memoryt_uint256",
                        [
                          M.call (|
                            "memory_array_index_access_uint256_dyn",
                            [
                              M.get (| "expr_229_mpos" |);
                              M.call (|
                                "convert_rational_0_by_1_to_uint256",
                                [
                                  M.get (| "expr_82" |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_83"],
                      Some (M.get (| "_26" |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_84"],
                      Some ([Literal.number 0x58])
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_85"],
                      Some (M.call (|
                        "eq",
                        [
                          M.call (|
                            "cleanup_uint256",
                            [
                              M.get (| "expr_83" |)
                            ]
                          |);
                          M.call (|
                            "convert_t_rational_by_to_t_uint256",
                            [
                              M.get (| "expr_84" |)
                            ]
                          |)
                        ]
                      |))
                    |) in
                  let _ :=
                    M.assign (|
                      ["expr_86"],
                      Some (M.get (| "expr_85" |))
                    |) in
                  let _ :=
                    M.declare (|
                      ["expr_80"],
                      M.get (| "expr_86" |)
                    |) in
                  tt
                ))
              |) in
            let _ :=
              M.if_ (|
                M.get (| "expr_80" |),
                ltac:(M.monadic (
                  let _ :=
                    M.assign (|
                      ["expr_87"],
                      Some ([Literal.number 0x07])
                    |) in
                  let _ :=
                    M.declare (|
                      ["var"],
                      M.call (|
                        "convert_rational_7_by_1_to_uint256",
                        [
                          M.get (| "expr_87" |)
                        ]
                      |)
                    |) in
                  let _ :=
                    M.leave (||) in
                  tt
                ))
              |) in
            let _ :=
              M.assign (|
                ["expr_88"],
                Some ([Literal.number 0x00])
              |) in
            let _ :=
              M.declare (|
                ["var"],
                M.call (|
                  "convert_rational_0_by_1_to_uint256",
                  [
                    M.get (| "expr_88" |)
                  ]
                |)
              |) in
            let _ :=
              M.leave (||) in
            tt
          ))
        |) in
      tt
    )).

    Definition data : string :=
      "a2646970667358221220ea4de04382e733f4446f15132523acf638f487a577ec0ecb6ec54e5c927df20f64736f6c634300081b0033".
  End C_243_deployed.
End C_243.
