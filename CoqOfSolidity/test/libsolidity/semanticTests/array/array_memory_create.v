(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition create (α : list Value.t) : M :=
    match α with
    | [len] =>
      let _ :=
        M.define (|
          [ "array" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 13
src: 99:6:0
nodeType: ArrayTypeName
baseType: Ty.path "uint"
length: 
typeDescriptions: typeString uint256[]typeIdentifier st_array$_t_uint256_$dyn_storage_ptr

,
            [
              M.get_name (| "len" |)
            ]
          |)
        |) in
      let _ :=
        M.return_ (|
          M.member_access (|
            M.get_name (| "array" |),
            "length"
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
