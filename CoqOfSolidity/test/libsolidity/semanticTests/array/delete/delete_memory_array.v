(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition len (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "data" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 11
src: 94:6:0
nodeType: ArrayTypeName
baseType: Ty.path "uint"
length: 
typeDescriptions: typeString uint256[]typeIdentifier st_array$_t_uint256_$dyn_storage_ptr

,
            [
              Value.Integer 2
            ]
          |)
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "data" |),
            Some (Value.Integer 0)
          |),
          Value.Integer 234
        |) in
      let _ :=
        M.assign (|
          "=",
          M.index_access (|
            M.get_name (| "data" |),
            Some (Value.Integer 1)
          |),
          Value.Integer 123
        |) in
      let _ :=
        M.un_op (|
          true,
          "delete",
          M.get_name (| "data" |)
        |) in
      let _ :=
        (* Beginning of a node! *)
id: 31
src: 180:51:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 216:4:0declaration: 9isSlot: isOffset: alueSize: src: 203:3:0declaration: 3isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
