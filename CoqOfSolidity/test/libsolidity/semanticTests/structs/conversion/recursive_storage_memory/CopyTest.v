(* Generated by solc *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module CopyTest_110.
  Definition code : M.t BlockUnit.t :=
    do* M.open_scope in
    do* ltac:(M.monadic (
      M.function (|
        "allocate_unbounded",
        [],
        ["memPtr"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["memPtr"],
            Some (M.call (|
              "mload",
              [
                [Literal.number 64]
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
        [],
        [],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert",
              [
                [Literal.number 0];
                [Literal.number 0]
              ]
            |)
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "cleanup_rational_by_1",
        ["value"],
        ["cleaned"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["cleaned"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "cleanup_uint256",
        ["value"],
        ["cleaned"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["cleaned"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "identity",
        ["value"],
        ["ret"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["ret"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "convert_t_rational_by_to_t_uint256",
        ["value"],
        ["converted"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["converted"],
            Some (M.call (|
              "cleanup_uint256",
              [
                M.call (|
                  "identity",
                  [
                    M.call (|
                      "cleanup_rational_by_1",
                      [
                        M.get_var (| "value" |)
                      ]
                    |)
                  ]
                |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "increment_wrapping_uint256",
        ["value"],
        ["ret"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["ret"],
            Some (M.call (|
              "cleanup_uint256",
              [
                M.call (|
                  "add",
                  [
                    M.get_var (| "value" |);
                    [Literal.number 1]
                  ]
                |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "cleanup_t_rational_by_1",
        ["value"],
        ["cleaned"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["cleaned"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "convert_rational_2_by_1_to_uint256",
        ["value"],
        ["converted"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["converted"],
            Some (M.call (|
              "cleanup_uint256",
              [
                M.call (|
                  "identity",
                  [
                    M.call (|
                      "cleanup_t_rational_by_1",
                      [
                        M.get_var (| "value" |)
                      ]
                    |)
                  ]
                |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "convert_array_array_struct_Tree_storage_dyn_storage_to_array_struct_Tree__dyn_ptr",
        ["value"],
        ["converted"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["converted"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "panic_error_0x41",
        [],
        [],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 0];
                M.call (|
                  "shl",
                  [
                    [Literal.number 224];
                    [Literal.number 0x4e487b71]
                  ]
                |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 4];
                [Literal.number 0x41]
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert",
              [
                [Literal.number 0];
                [Literal.number 0x24]
              ]
            |)
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "array_length_array_struct_Tree_storage_dyn_ptr",
        ["value"],
        ["length"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["length"],
            Some (M.call (|
              "sload",
              [
                M.get_var (| "value" |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "panic_error_0x32",
        [],
        [],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 0];
                M.call (|
                  "shl",
                  [
                    [Literal.number 224];
                    [Literal.number 0x4e487b71]
                  ]
                |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 4];
                [Literal.number 0x32]
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert",
              [
                [Literal.number 0];
                [Literal.number 0x24]
              ]
            |)
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "array_dataslot_array_struct_Tree_storage_dyn_ptr",
        ["ptr"],
        ["data"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["data"],
            Some (M.get_var (| "ptr" |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 0];
                M.get_var (| "ptr" |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["data"],
            Some (M.call (|
              "keccak256",
              [
                [Literal.number 0];
                [Literal.number 0x20]
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "storage_array_index_access_struct_Tree__dyn_ptr",
        ["array"; "index"],
        ["slot";
    "offset"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.declare (|
            ["arrayLength"],
            Some (M.call (|
              "array_length_array_struct_Tree_storage_dyn_ptr",
              [
                M.get_var (| "array" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.get_var (| "index" |);
                    M.get_var (| "arrayLength" |)
                  ]
                |)
              ]
            |),
            do* M.open_scope in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "panic_error_0x32",
                  []
                |)
              |)
            )) in
            M.close_scope
          |)
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["dataArea"],
            Some (M.call (|
              "array_dataslot_array_struct_Tree_storage_dyn_ptr",
              [
                M.get_var (| "array" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["slot"],
            Some (M.call (|
              "add",
              [
                M.get_var (| "dataArea" |);
                M.call (|
                  "mul",
                  [
                    M.get_var (| "index" |);
                    [Literal.number 1]
                  ]
                |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["offset"],
            Some ([Literal.number 0])
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "array_push_zero_array_struct_Tree_storage_dyn_ptr",
        ["array"],
        ["slot";
    "offset"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.declare (|
            ["oldLen"],
            Some (M.call (|
              "array_length_array_struct_Tree_storage_dyn_ptr",
              [
                M.get_var (| "array" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.get_var (| "oldLen" |);
                    [Literal.number 18446744073709551616]
                  ]
                |)
              ]
            |),
            do* M.open_scope in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "panic_error_0x41",
                  []
                |)
              |)
            )) in
            M.close_scope
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "sstore",
              [
                M.get_var (| "array" |);
                M.call (|
                  "add",
                  [
                    M.get_var (| "oldLen" |);
                    [Literal.number 1]
                  ]
                |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["slot"; "offset"],
            Some (M.call (|
              "storage_array_index_access_struct_Tree__dyn_ptr",
              [
                M.get_var (| "array" |);
                M.get_var (| "oldLen" |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "cleanup_rational_by",
        ["value"],
        ["cleaned"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["cleaned"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "convert_rational_23_by_1_to_uint256",
        ["value"],
        ["converted"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["converted"],
            Some (M.call (|
              "cleanup_uint256",
              [
                M.call (|
                  "identity",
                  [
                    M.call (|
                      "cleanup_rational_by",
                      [
                        M.get_var (| "value" |)
                      ]
                    |)
                  ]
                |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "array_length_array_struct_Tree_storage_dyn",
        ["value"],
        ["length"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["length"],
            Some (M.call (|
              "sload",
              [
                M.get_var (| "value" |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "array_dataslot_array_struct_Tree_storage_dyn",
        ["ptr"],
        ["data"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["data"],
            Some (M.get_var (| "ptr" |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 0];
                M.get_var (| "ptr" |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["data"],
            Some (M.call (|
              "keccak256",
              [
                [Literal.number 0];
                [Literal.number 0x20]
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "storage_array_index_access_struct_Tree__dyn",
        ["array"; "index"],
        ["slot";
    "offset"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.declare (|
            ["arrayLength"],
            Some (M.call (|
              "array_length_array_struct_Tree_storage_dyn",
              [
                M.get_var (| "array" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.get_var (| "index" |);
                    M.get_var (| "arrayLength" |)
                  ]
                |)
              ]
            |),
            do* M.open_scope in
            do* ltac:(M.monadic (
              M.expr_stmt (|
                M.call (|
                  "panic_error_0x32",
                  []
                |)
              |)
            )) in
            M.close_scope
          |)
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["dataArea"],
            Some (M.call (|
              "array_dataslot_array_struct_Tree_storage_dyn",
              [
                M.get_var (| "array" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["slot"],
            Some (M.call (|
              "add",
              [
                M.get_var (| "dataArea" |);
                M.call (|
                  "mul",
                  [
                    M.get_var (| "index" |);
                    [Literal.number 1]
                  ]
                |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          M.assign (|
            ["offset"],
            Some ([Literal.number 0])
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "cleanup_t_rational_by",
        ["value"],
        ["cleaned"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["cleaned"],
            Some (M.get_var (| "value" |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "convert_rational_by_to_uint256",
        ["value"],
        ["converted"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["converted"],
            Some (M.call (|
              "cleanup_uint256",
              [
                M.call (|
                  "identity",
                  [
                    M.call (|
                      "cleanup_t_rational_by",
                      [
                        M.get_var (| "value" |)
                      ]
                    |)
                  ]
                |)
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "constructor_CopyTest",
        [],
        [],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.declare (|
            ["expr"],
            Some ([Literal.number 0x00])
          |)
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["var_i"],
            Some (M.call (|
              "convert_t_rational_by_to_t_uint256",
              [
                M.get_var (| "expr" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          do*
            do* M.open_scope in
            M.close_scope in
    ltac:(M.monadic (
            M.for_ (|
              [Literal.number 1],
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_1"],
                  Some (M.get_var (| "var_i" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_2"],
                  Some (M.call (|
                    "increment_wrapping_uint256",
                    [
                      M.get_var (| "_1" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.assign (|
                  ["var_i"],
                  Some (M.get_var (| "_2" |))
                |)
              )) in
              M.close_scope,
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_3"],
                  Some (M.get_var (| "var_i" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_1"],
                  Some (M.get_var (| "_3" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_2"],
                  Some ([Literal.number 0x02])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_3"],
                  Some (M.call (|
                    "lt",
                    [
                      M.call (|
                        "cleanup_uint256",
                        [
                          M.get_var (| "expr_1" |)
                        ]
                      |);
                      M.call (|
                        "convert_rational_2_by_1_to_uint256",
                        [
                          M.get_var (| "expr_2" |)
                        ]
                      |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.if_ (|
                  M.call (|
                    "iszero",
                    [
                      M.get_var (| "expr_3" |)
                    ]
                  |),
                  do* M.open_scope in
                  do* ltac:(M.monadic (
                    M.break (||)
                  )) in
                  M.close_scope
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_5_slot"],
                  Some ([Literal.number 0x00])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_25_slot"],
                  Some (M.get_var (| "_5_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_4"],
                  Some (M.call (|
                    "add",
                    [
                      M.get_var (| "expr_25_slot" |);
                      [Literal.number 0]
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_7_slot"],
                  Some (M.get_var (| "_4" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_28_slot"],
                  Some (M.get_var (| "_7_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_29_self_slot"],
                  Some (M.call (|
                    "convert_array_array_struct_Tree_storage_dyn_storage_to_array_struct_Tree__dyn_ptr",
                    [
                      M.get_var (| "expr_28_slot" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_5"; "_6"],
                  Some (M.call (|
                    "array_push_zero_array_struct_Tree_storage_dyn_ptr",
                    [
                      M.get_var (| "expr_29_self_slot" |)
                    ]
                  |))
                |)
              )) in
              M.close_scope
            |)
          ))
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["expr_4"],
            Some ([Literal.number 0x00])
          |)
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["var_i_1"],
            Some (M.call (|
              "convert_t_rational_by_to_t_uint256",
              [
                M.get_var (| "expr_4" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          do*
            do* M.open_scope in
            M.close_scope in
    ltac:(M.monadic (
            M.for_ (|
              [Literal.number 1],
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_7"],
                  Some (M.get_var (| "var_i_1" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_8"],
                  Some (M.call (|
                    "increment_wrapping_uint256",
                    [
                      M.get_var (| "_7" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.assign (|
                  ["var_i_1"],
                  Some (M.get_var (| "_8" |))
                |)
              )) in
              M.close_scope,
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_9"],
                  Some (M.get_var (| "var_i_1" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_5"],
                  Some (M.get_var (| "_9" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_6"],
                  Some ([Literal.number 0x17])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_7"],
                  Some (M.call (|
                    "lt",
                    [
                      M.call (|
                        "cleanup_uint256",
                        [
                          M.get_var (| "expr_5" |)
                        ]
                      |);
                      M.call (|
                        "convert_rational_23_by_1_to_uint256",
                        [
                          M.get_var (| "expr_6" |)
                        ]
                      |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.if_ (|
                  M.call (|
                    "iszero",
                    [
                      M.get_var (| "expr_7" |)
                    ]
                  |),
                  do* M.open_scope in
                  do* ltac:(M.monadic (
                    M.break (||)
                  )) in
                  M.close_scope
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_slot"],
                  Some ([Literal.number 0x00])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_43_slot"],
                  Some (M.get_var (| "_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_10"],
                  Some (M.call (|
                    "add",
                    [
                      M.get_var (| "expr_43_slot" |);
                      [Literal.number 0]
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_16_slot"],
                  Some (M.get_var (| "_10" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_46_slot"],
                  Some (M.get_var (| "_16_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_8"],
                  Some ([Literal.number 0x00])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_11"; "_12"],
                  Some (M.call (|
                    "storage_array_index_access_struct_Tree__dyn",
                    [
                      M.get_var (| "expr_46_slot" |);
                      M.get_var (| "expr_8" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_19_slot"],
                  Some (M.get_var (| "_11" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_47_slot"],
                  Some (M.get_var (| "_19_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_13"],
                  Some (M.call (|
                    "add",
                    [
                      M.get_var (| "expr_47_slot" |);
                      [Literal.number 0]
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_21_slot"],
                  Some (M.get_var (| "_13" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_48_slot"],
                  Some (M.get_var (| "_21_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_49_self_slot"],
                  Some (M.call (|
                    "convert_array_array_struct_Tree_storage_dyn_storage_to_array_struct_Tree__dyn_ptr",
                    [
                      M.get_var (| "expr_48_slot" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_14"; "_15"],
                  Some (M.call (|
                    "array_push_zero_array_struct_Tree_storage_dyn_ptr",
                    [
                      M.get_var (| "expr_49_self_slot" |)
                    ]
                  |))
                |)
              )) in
              M.close_scope
            |)
          ))
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["expr_9"],
            Some ([Literal.number 0x00])
          |)
        )) in
        do* ltac:(M.monadic (
          M.declare (|
            ["var_i_2"],
            Some (M.call (|
              "convert_t_rational_by_to_t_uint256",
              [
                M.get_var (| "expr_9" |)
              ]
            |))
          |)
        )) in
        do* ltac:(M.monadic (
          do*
            do* M.open_scope in
            M.close_scope in
    ltac:(M.monadic (
            M.for_ (|
              [Literal.number 1],
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_16"],
                  Some (M.get_var (| "var_i_2" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_17"],
                  Some (M.call (|
                    "increment_wrapping_uint256",
                    [
                      M.get_var (| "_16" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.assign (|
                  ["var_i_2"],
                  Some (M.get_var (| "_17" |))
                |)
              )) in
              M.close_scope,
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_18"],
                  Some (M.get_var (| "var_i_2" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_10"],
                  Some (M.get_var (| "_18" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_11"],
                  Some ([Literal.number 0x2a])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_12"],
                  Some (M.call (|
                    "lt",
                    [
                      M.call (|
                        "cleanup_uint256",
                        [
                          M.get_var (| "expr_10" |)
                        ]
                      |);
                      M.call (|
                        "convert_rational_by_to_uint256",
                        [
                          M.get_var (| "expr_11" |)
                        ]
                      |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.if_ (|
                  M.call (|
                    "iszero",
                    [
                      M.get_var (| "expr_12" |)
                    ]
                  |),
                  do* M.open_scope in
                  do* ltac:(M.monadic (
                    M.break (||)
                  )) in
                  M.close_scope
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_28_slot"],
                  Some ([Literal.number 0x00])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_slot"],
                  Some (M.get_var (| "_28_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_19"],
                  Some (M.call (|
                    "add",
                    [
                      M.get_var (| "expr_slot" |);
                      [Literal.number 0]
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_30_slot"],
                  Some (M.get_var (| "_19" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_66_slot"],
                  Some (M.get_var (| "_30_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_13"],
                  Some ([Literal.number 0x01])
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_20"; "_21"],
                  Some (M.call (|
                    "storage_array_index_access_struct_Tree__dyn",
                    [
                      M.get_var (| "expr_66_slot" |);
                      M.get_var (| "expr_13" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_33_slot"],
                  Some (M.get_var (| "_20" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_67_slot"],
                  Some (M.get_var (| "_33_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_22"],
                  Some (M.call (|
                    "add",
                    [
                      M.get_var (| "expr_67_slot" |);
                      [Literal.number 0]
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_35_slot"],
                  Some (M.get_var (| "_22" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_68_slot"],
                  Some (M.get_var (| "_35_slot" |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["expr_self_slot"],
                  Some (M.call (|
                    "convert_array_array_struct_Tree_storage_dyn_storage_to_array_struct_Tree__dyn_ptr",
                    [
                      M.get_var (| "expr_68_slot" |)
                    ]
                  |))
                |)
              )) in
              do* ltac:(M.monadic (
                M.declare (|
                  ["_23"; "_24"],
                  Some (M.call (|
                    "array_push_zero_array_struct_Tree_storage_dyn_ptr",
                    [
                      M.get_var (| "expr_self_slot" |)
                    ]
                  |))
                |)
              )) in
              M.close_scope
            |)
          ))
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      do* M.open_scope in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "mstore",
            [
              [Literal.number 64];
              M.call (|
                "memoryguard",
                [
                  [Literal.number 0x80]
                ]
              |)
            ]
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.if_ (|
          M.call (|
            "callvalue",
            []
          |),
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                []
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "constructor_CopyTest",
            []
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.declare (|
          ["_1"],
          Some (M.call (|
            "allocate_unbounded",
            []
          |))
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "codecopy",
            [
              M.get_var (| "_1" |);
              M.call (|
                "dataoffset",
                [
                  [Literal.string "436f7079546573745f3131305f6465706c6f7965640000000000000000000000"]
                ]
              |);
              M.call (|
                "datasize",
                [
                  [Literal.string "436f7079546573745f3131305f6465706c6f7965640000000000000000000000"]
                ]
              |)
            ]
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "return",
            [
              M.get_var (| "_1" |);
              M.call (|
                "datasize",
                [
                  [Literal.string "436f7079546573745f3131305f6465706c6f7965640000000000000000000000"]
                ]
              |)
            ]
          |)
        |)
      )) in
      M.close_scope
    )) in
    M.close_scope.

  Module CopyTest_110_deployed.
    Definition code : M.t BlockUnit.t :=
      do* M.open_scope in
      do* ltac:(M.monadic (
        M.function (|
          "shift_right_unsigned",
          ["value"],
          ["newValue"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["newValue"],
              Some (M.call (|
                "shr",
                [
                  [Literal.number 224];
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_unbounded",
          [],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "mload",
                [
                  [Literal.number 64]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_decode",
          ["headStart"; "dataEnd"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "slt",
                [
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "dataEnd" |);
                      M.get_var (| "headStart" |)
                    ]
                  |);
                  [Literal.number 0]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_uint256",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_uint256",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "pos" |);
                  M.call (|
                    "cleanup_uint256",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_uint256_uint256_uint256",
          ["headStart"; "value0"; "value1"; "value2"],
          ["tail"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["tail"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "headStart" |);
                  [Literal.number 96]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_uint256",
                [
                  M.get_var (| "value0" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_uint256",
                [
                  M.get_var (| "value1" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 32]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_uint256",
                [
                  M.get_var (| "value2" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 64]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_run",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_decode",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["ret"; "ret_1"; "ret_2"],
              Some (M.call (|
                "fun_run",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_uint256_uint256_uint256",
                [
                  M.get_var (| "memPos" |);
                  M.get_var (| "ret" |);
                  M.get_var (| "ret_1" |);
                  M.get_var (| "ret_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get_var (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "memEnd" |);
                      M.get_var (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_uint256",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some ([Literal.number 0])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "round_up_to_mul_of",
          ["value"],
          ["result"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["result"],
              Some (M.call (|
                "and",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "value" |);
                      [Literal.number 31]
                    ]
                  |);
                  M.call (|
                    "not",
                    [
                      [Literal.number 31]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "panic_error_0x41",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x41]
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "finalize_allocation",
          ["memPtr"; "size"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["newFreePtr"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "memPtr" |);
                  M.call (|
                    "round_up_to_mul_of",
                    [
                      M.get_var (| "size" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "or",
                [
                  M.call (|
                    "gt",
                    [
                      M.get_var (| "newFreePtr" |);
                      [Literal.number 0xffffffffffffffff]
                    ]
                  |);
                  M.call (|
                    "lt",
                    [
                      M.get_var (| "newFreePtr" |);
                      M.get_var (| "memPtr" |)
                    ]
                  |)
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 64];
                  M.get_var (| "newFreePtr" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory",
          ["size"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "finalize_allocation",
                [
                  M.get_var (| "memPtr" |);
                  M.get_var (| "size" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_struct_struct_Tree",
          [],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  [Literal.number 32]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_array_struct_Tree_dyn",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some ([Literal.number 96])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_struct_struct_Tree",
          [],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_struct_struct_Tree",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["offset"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "offset" |);
                  M.call (|
                    "zero_value_for_array_struct_Tree_dyn",
                    []
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["offset"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "offset" |);
                  [Literal.number 32]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_struct_Tree",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_struct_struct_Tree",
                []
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_struct_Tree_storage_dyn",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some (M.call (|
                "sload",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_struct_Tree_dyn",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "size" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_struct_Tree_dyn",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_struct_Tree_dyn",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "memPtr" |);
                  M.get_var (| "length" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_struct_Tree_storage_dyn",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.get_var (| "ptr" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.call (|
                "keccak256",
                [
                  [Literal.number 0];
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "copy_array_from_storage_to_memory_array_struct_Tree__dyn",
          ["slot"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_struct_Tree_storage_dyn",
                [
                  M.get_var (| "slot" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_struct_Tree_dyn",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["mpos"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["mpos"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "mpos" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["spos"],
              Some (M.call (|
                "array_dataslot_array_struct_Tree_storage_dyn",
                [
                  M.get_var (| "slot" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        M.get_var (| "mpos" |);
                        M.call (|
                          "convert_struct_Tree_storage_to_struct_Tree",
                          [
                            M.get_var (| "spos" |)
                          ]
                        |)
                      ]
                    |)
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["mpos"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "mpos" |);
                        [Literal.number 0x20]
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["spos"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "spos" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "write_to_memory_array_struct_Tree_dyn",
          ["memPtr"; "value"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "memPtr" |);
                  M.get_var (| "value" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "read_from_storage_reference_type_struct_Tree",
          ["slot"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "allocate_memory_struct_struct_Tree",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memberValue"],
              Some (M.call (|
                "copy_array_from_storage_to_memory_array_struct_Tree__dyn",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "slot" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "write_to_memory_array_struct_Tree_dyn",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "value" |);
                      [Literal.number 0]
                    ]
                  |);
                  M.get_var (| "memberValue" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_struct_Tree_storage_to_struct_Tree",
          ["value"],
          ["converted"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "read_from_storage_reference_type_struct_Tree",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_struct_Tree_dyn",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some (M.call (|
                "mload",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "panic_error_0x32",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x32]
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "memory_array_index_access_struct_Tree_dyn",
          ["baseRef"; "index"],
          ["addr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "iszero",
                [
                  M.call (|
                    "lt",
                    [
                      M.get_var (| "index" |);
                      M.call (|
                        "array_length_array_struct_Tree_dyn",
                        [
                          M.get_var (| "baseRef" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x32",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["offset"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "index" |);
                  [Literal.number 32]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["offset"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "offset" |);
                  [Literal.number 32]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["addr"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "baseRef" |);
                  M.get_var (| "offset" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_t_rational_by",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "identity",
          ["value"],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_t_rational_by_to_t_uint256",
          ["value"],
          ["converted"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_uint256",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_t_rational_by",
                        [
                          M.get_var (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_rational_by",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_rational_by_to_uint256",
          ["value"],
          ["converted"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_uint256",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_rational_by",
                        [
                          M.get_var (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_run",
          [],
          ["var_";
      "var";
      "var_1"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_uint256"],
              Some (M.call (|
                "zero_value_for_split_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_"],
              Some (M.get_var (| "zero_uint256" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_uint256_1"],
              Some (M.call (|
                "zero_value_for_split_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get_var (| "zero_uint256_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_uint256"],
              Some (M.call (|
                "zero_value_for_split_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_1"],
              Some (M.get_var (| "zero_t_uint256" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["var_memoryTree_mpos"],
              None
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_struct_Tree_mpos"],
              Some (M.call (|
                "zero_value_for_split_struct_Tree",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_memoryTree_mpos"],
              Some (M.get_var (| "zero_struct_Tree_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_slot"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_slot"],
              Some (M.get_var (| "_slot" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_memoryTree_mpos"],
              Some (M.call (|
                "convert_struct_Tree_storage_to_struct_Tree",
                [
                  M.get_var (| "expr_slot" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_mpos"],
              Some (M.get_var (| "var_memoryTree_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_91_mpos"],
              Some (M.get_var (| "_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_1"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "expr_91_mpos" |);
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_9_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.get_var (| "_1" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_mpos"],
              Some (M.get_var (| "_9_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr"],
              Some (M.call (|
                "array_length_array_struct_Tree_dyn",
                [
                  M.get_var (| "expr_mpos" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_component"],
              Some (M.get_var (| "expr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_10_mpos"],
              Some (M.get_var (| "var_memoryTree_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_94_mpos"],
              Some (M.get_var (| "_10_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_2"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "expr_94_mpos" |);
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_12_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.get_var (| "_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_95_mpos"],
              Some (M.get_var (| "_12_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_1"],
              Some ([Literal.number 0x00])
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_13_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.call (|
                    "memory_array_index_access_struct_Tree_dyn",
                    [
                      M.get_var (| "expr_95_mpos" |);
                      M.call (|
                        "convert_t_rational_by_to_t_uint256",
                        [
                          M.get_var (| "expr_1" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_97_mpos"],
              Some (M.get_var (| "_13_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_3"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "expr_97_mpos" |);
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_15_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.get_var (| "_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_98_mpos"],
              Some (M.get_var (| "_15_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_2"],
              Some (M.call (|
                "array_length_array_struct_Tree_dyn",
                [
                  M.get_var (| "expr_98_mpos" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_component_1"],
              Some (M.get_var (| "expr_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_16_mpos"],
              Some (M.get_var (| "var_memoryTree_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_100_mpos"],
              Some (M.get_var (| "_16_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_4"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "expr_100_mpos" |);
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_18_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.get_var (| "_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_101_mpos"],
              Some (M.get_var (| "_18_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_3"],
              Some ([Literal.number 0x01])
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_19_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.call (|
                    "memory_array_index_access_struct_Tree_dyn",
                    [
                      M.get_var (| "expr_101_mpos" |);
                      M.call (|
                        "convert_rational_by_to_uint256",
                        [
                          M.get_var (| "expr_3" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_103_mpos"],
              Some (M.get_var (| "_19_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_5"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "expr_103_mpos" |);
                  [Literal.number 0]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["_21_mpos"],
              Some (M.call (|
                "mload",
                [
                  M.get_var (| "_5" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_104_mpos"],
              Some (M.get_var (| "_21_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_4"],
              Some (M.call (|
                "array_length_array_struct_Tree_dyn",
                [
                  M.get_var (| "expr_104_mpos" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["expr_component_2"],
              Some (M.get_var (| "expr_4" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_"],
              Some (M.get_var (| "expr_component" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var"],
              Some (M.get_var (| "expr_component_1" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_1"],
              Some (M.get_var (| "expr_component_2" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.leave (||)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 64];
                M.call (|
                  "memoryguard",
                  [
                    [Literal.number 0x80]
                  ]
                |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.call (|
                      "calldatasize",
                      []
                    |);
                    [Literal.number 4]
                  ]
                |)
              ]
            |),
            do* M.open_scope in
            do* ltac:(M.monadic (
              M.declare (|
                ["selector"],
                Some (M.call (|
                  "shift_right_unsigned",
                  [
                    M.call (|
                      "calldataload",
                      [
                        [Literal.number 0]
                      ]
                    |)
                  ]
                |))
              |)
            )) in
            do* ltac:(M.monadic (
              M.switch (|
                M.get_var (| "selector" |),
                [
                  (
                    Some (Literal.number 0xc0406226),
                    do* M.open_scope in
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_run",
                          []
                        |)
                      |)
                    )) in
                    M.close_scope
                  );
                  (
                    None,
                    do* M.open_scope in
                    M.close_scope
                  )          ]
              |)
            )) in
            M.close_scope
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
              []
            |)
          |)
        )) in
        M.close_scope
      )) in
      M.close_scope.

    Definition data : string :=
      "a2646970667358221220b53b4eacb1c88af88c98c5c4e7e2a34bf8a2f59d6efd5b3fcdd88ecb9799a9ac64736f6c634300081b0033".
  End CopyTest_110_deployed.
End CopyTest_110.
