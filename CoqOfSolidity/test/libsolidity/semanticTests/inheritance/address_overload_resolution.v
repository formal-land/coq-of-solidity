(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition balance (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 1
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition transfer (α : list Value.t) : M :=
    match α with
    | [amount] =>
      let _ :=
        M.return_ (|
          M.get_name (| "amount" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.

(* Contract *)
Module D.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              Value.Tuple [
                M.call (|
                  NewExpression (* Beginning of a node! *)
id: 25
src: 263:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 24
src: 263:1:0
nodeType: IdentifierPath
name: C
nameLocations: [263:1:0, ]
referencedDeclaration: 19

referencedDeclaration: 19
typeDescriptions: typeString contract CtypeIdentifier st_contract$_C_$19

,
                  []
                |)
              ],
              "balance"
            |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              Value.Tuple [
                M.call (|
                  NewExpression (* Beginning of a node! *)
id: 39
src: 350:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 38
src: 350:1:0
nodeType: IdentifierPath
name: C
nameLocations: [350:1:0, ]
referencedDeclaration: 19

referencedDeclaration: 19
typeDescriptions: typeString contract CtypeIdentifier st_contract$_C_$19

,
                  []
                |)
              ],
              "transfer"
            |),
            [
              Value.Integer 5
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.
