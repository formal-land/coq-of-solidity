(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module Receiver.
  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Receiver.

(* Contract *)
Module Main.
  Definition  (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition s (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.define (|
          [ "r" ],
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 18
src: 332:8:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 17
src: 332:8:0
nodeType: IdentifierPath
name: Receiver
nameLocations: [332:8:0, ]
referencedDeclaration: 5

referencedDeclaration: 5
typeDescriptions: typeString contract ReceivertypeIdentifier st_contract$_Receiver_$5

,
            []
          |)
        |) in
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.call (|
                Ty.path "address",
                [
                  M.get_name (| "r" |)
                ]
              |),
              "send"
            |),
            [
              Value.Integer 0
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End Main.
