(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition i : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [newI] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "i" |),
          M.get_name (| "newI" |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.

(* Contract *)
Module D.
  Definition c : Value.t :=
    undefined.

  Definition  (α : list Value.t) : M :=
    match α with
    | [v] =>
      let _ :=
        M.assign (|
          "=",
          M.get_name (| "c" |),
          M.call (|
            NewExpression (* Beginning of a node! *)
id: 23
src: 151:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 22
src: 151:1:0
nodeType: IdentifierPath
name: C
nameLocations: [151:1:0, ]
referencedDeclaration: 13

referencedDeclaration: 13
typeDescriptions: typeString contract CtypeIdentifier st_contract$_C_$13

,
            [
              M.get_name (| "v" |)
            ]
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "c" |),
              "i"
            |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End D.
