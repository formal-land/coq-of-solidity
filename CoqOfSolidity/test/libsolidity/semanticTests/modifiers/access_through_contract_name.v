(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition x : Value.t :=
    Value.Integer 7.

  (* Beginning of a node! *)
id: 11
src: 40:32:0
nodeType: ModifierDefinition
name: m
nameLocation: 49:1:0
documentation: 
visibility: internal
parameters: (* Beginning of a node! *)
id: 4
src: 51:0:0
nodeType: ParameterList
parameters: 

virtual: 1
overrides: 
body: let _ :=
    M.assign (|
      "=",
      M.get_name (| "x" |),
      Value.Integer 2
    |) in
  let _ :=
    (* Beginning of a node! *)
id: 9
src: 68:1:0
nodeType: PlaceholderStatement
 in
  Value.Tuple []

End A.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 23
src: 97:33:0
nodeType: ModifierDefinition
name: m
nameLocation: 106:1:0
documentation: 
visibility: internal
parameters: (* Beginning of a node! *)
id: 15
src: 108:0:0
nodeType: ParameterList
parameters: 

virtual: 0
overrides: (* Beginning of a node! *)
id: 16
src: 108:8:0
nodeType: OverrideSpecifier
overrides: 

body: let _ :=
    M.assign (|
      "=",
      M.get_name (| "x" |),
      Value.Integer 1
    |) in
  let _ :=
    (* Beginning of a node! *)
id: 21
src: 126:1:0
nodeType: PlaceholderStatement
 in
  Value.Tuple []
baseModifiers: [ remapping: "]


  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 9
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.return_ (|
          Value.Integer 10
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
