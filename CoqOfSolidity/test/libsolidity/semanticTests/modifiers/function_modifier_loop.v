(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 20
src: 17:96:0
nodeType: ModifierDefinition
name: repeat
nameLocation: 26:6:0
documentation: 
visibility: internal
parameters: (* Beginning of a node! *)
id: 3
src: 32:15:0
nodeType: ParameterList
parameters: Definition count : Value.t :=
    undefined.

virtual: 0
overrides: 
body: let _ :=
    M.define (|
      [ "i" ],
      Value.Default
    |) in
  let _ :=
    (* Beginning of a node! *)
id: 18
src: 77:29:0
nodeType: ForStatement
initializationExpression: M.assign (|
      "=",
      M.get_name (| "i" |),
      Value.Integer 0
    |)
condition: M.bin_op (|
      "<",
      M.get_name (| "i" |),
      M.get_name (| "count" |)
    |)
loopExpression: M.un_op (|
      true,
      "++",
      M.get_name (| "i" |)
    |)
body: (* Beginning of a node! *)
id: 17
src: 105:1:0
nodeType: PlaceholderStatement

isSimpleCounterLoop: 1
 in
  Value.Tuple []


  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.assign (|
          "+=",
          M.get_name (| "r" |),
          Value.Integer 1
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
