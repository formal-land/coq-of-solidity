(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition g (α : list Value.t) : M :=
    match α with
    | [revertMsg] =>
      let _ :=
        (* Beginning of a node! *)
id: 9
src: 95:59:0
nodeType: InlineAssembly
AST: TODO YulJson
externalReferences: src: 117:9:0declaration: 2isSlot: isOffset: alueSize: src: 141:9:0declaration: 2isSlot: isOffset: alueSize: 
evmVersion: cancun
 in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f1 (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSelector"
              |),
              [
                Value.Integer 0x12345678,
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 39
src: 324:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 46
src: 386:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause  (* Beginning of a node! *)
id: 53
src: 442:14:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f1a (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSelector"
              |),
              [
                Value.Integer 0x12345678,
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 88
src: 661:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 95
src: 723:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f1b (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSelector"
              |),
              [
                Value.Integer 0x12345678,
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 134
src: 983:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 141
src: 1045:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f1c (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSelector"
              |),
              [
                Value.Integer 0x12345678,
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 176
src: 1265:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f2 (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x100
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 215
src: 1552:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 222
src: 1614:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause  (* Beginning of a node! *)
id: 229
src: 1670:14:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f2a (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x100
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 264
src: 1916:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 271
src: 1978:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f2b (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x100
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 310
src: 2265:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 317
src: 2327:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f2c (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x100
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 352
src: 2574:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f3 (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x30
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 391
src: 2847:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 398
src: 2909:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause  (* Beginning of a node! *)
id: 405
src: 2965:14:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f3a (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x30
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 440
src: 3197:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 447
src: 3259:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause  (* Beginning of a node! *)
id: 454
src: 3315:14:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f3b (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x30
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 489
src: 3547:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 496
src: 3609:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f3c (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x30
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 531
src: 3842:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f4 (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x7
                  ]
                |),
                M.call (|
                  Ty.path "bytes7",
                  [
                    Value.String "abcdefg"
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 570
src: 4117:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 577
src: 4179:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause  (* Beginning of a node! *)
id: 584
src: 4235:14:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f4a (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x7
                  ]
                |),
                M.call (|
                  Ty.path "bytes7",
                  [
                    Value.String "abcdefg"
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 619
src: 4469:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 626
src: 4531:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 2
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f4b (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x7
                  ]
                |),
                M.call (|
                  Ty.path "bytes7",
                  [
                    Value.String "abcdefg"
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 665
src: 4806:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause Error (* Beginning of a node! *)
id: 672
src: 4868:15:0
nodeType: ParameterList
parameters: Definition  : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.

  Definition f4c (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        TryStatement M.call (|
          M.member_access (|
            M.get_name (| "this" |),
            "g"
          |),
          [
            M.call (|
              M.member_access (|
                M.get_name (| "abi" |),
                "encodeWithSignature"
              |),
              [
                Value.String "Error(string)",
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x20
                  ]
                |),
                M.call (|
                  Ty.path "uint",
                  [
                    Value.Integer 0x7
                  ]
                |),
                M.call (|
                  Ty.path "bytes7",
                  [
                    Value.String "abcdefg"
                  ]
                |)
              ]
            |)
          ]
        |) TryCatchClause  (* Beginning of a node! *)
id: 707
src: 5103:16:0
nodeType: ParameterList
parameters: Definition a : Value.t :=
          undefined., Definition b : Value.t :=
          undefined.
 let _ :=
          M.return_ (|
            Value.Integer 0
          |) in
        Value.Tuple [], TryCatchClause   let _ :=
          M.return_ (|
            Value.Integer 1
          |) in
        Value.Tuple [] in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
