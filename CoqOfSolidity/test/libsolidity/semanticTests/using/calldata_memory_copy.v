(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [arr] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "arr" |),
              "sum"
            |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.

Definition sum (α : list Value.t) : M :=
  match α with
  | [arr] =>
    let _ :=
      (* Beginning of a node! *)
id: 40
src: 171:70:0
nodeType: ForStatement
initializationExpression: M.define (|
        [ "i" ],
        Value.Integer 0
      |)
condition: M.bin_op (|
        "<",
        M.get_name (| "i" |),
        M.member_access (|
          M.get_name (| "arr" |),
          "length"
        |)
      |)
loopExpression: M.un_op (|
        false,
        "++",
        M.get_name (| "i" |)
      |)
body: let _ :=
        M.assign (|
          "+=",
          M.get_name (| "result" |),
          M.index_access (|
            M.get_name (| "arr" |),
            Some (M.get_name (| "i" |))
          |)
        |) in
      Value.Tuple []
isSimpleCounterLoop: 1
 in
    Value.Tuple []
  | _ => M.impossible "invalid number of parameters"
  end.
(* Beginning of a node! *)
id: 46
src: 245:23:0
nodeType: UsingForDirective
typeName: (* Beginning of a node! *)
id: 45
src: 261:6:0
nodeType: ArrayTypeName
baseType: Ty.path "uint"
length: 
typeDescriptions: typeString uint256[]typeIdentifier st_array$_t_uint256_$dyn_storage_ptr

functionList: [{function: (* Beginning of a node! *)
id: 43
src: 252:3:0
nodeType: IdentifierPath
name: sum
nameLocations: [252:3:0, ]
referencedDeclaration: 42
, }, ]
global: 0
