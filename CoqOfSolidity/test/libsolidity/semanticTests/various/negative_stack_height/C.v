(* Generated by solc *)
Require Import CoqOfSolidity.CoqOfSolidity.

Module C_139.
  Definition code : M.t BlockUnit.t :=
    do* M.open_scope in
    do* ltac:(M.monadic (
      M.function (|
        "allocate_unbounded",
        [],
        ["memPtr"],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.assign (|
            ["memPtr"],
            Some (M.call (|
              "mload",
              [
                [Literal.number 64]
              ]
            |))
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      M.function (|
        "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
        [],
        [],
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert",
              [
                [Literal.number 0];
                [Literal.number 0]
              ]
            |)
          |)
        )) in
        M.close_scope
      |)
    )) in
    do* ltac:(M.monadic (
      do* M.open_scope in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "mstore",
            [
              [Literal.number 64];
              M.call (|
                "memoryguard",
                [
                  [Literal.number 0x80]
                ]
              |)
            ]
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.if_ (|
          M.call (|
            "callvalue",
            []
          |),
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                []
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.declare (|
          ["_1"],
          Some (M.call (|
            "allocate_unbounded",
            []
          |))
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "codecopy",
            [
              M.get_var (| "_1" |);
              M.call (|
                "dataoffset",
                [
                  [Literal.string "435f3133395f6465706c6f796564000000000000000000000000000000000000"]
                ]
              |);
              M.call (|
                "datasize",
                [
                  [Literal.string "435f3133395f6465706c6f796564000000000000000000000000000000000000"]
                ]
              |)
            ]
          |)
        |)
      )) in
      do* ltac:(M.monadic (
        M.expr_stmt (|
          M.call (|
            "return",
            [
              M.get_var (| "_1" |);
              M.call (|
                "datasize",
                [
                  [Literal.string "435f3133395f6465706c6f796564000000000000000000000000000000000000"]
                ]
              |)
            ]
          |)
        |)
      )) in
      M.close_scope
    )) in
    M.close_scope.

  Module C_139_deployed.
    Definition code : M.t BlockUnit.t :=
      do* M.open_scope in
      do* ltac:(M.monadic (
        M.function (|
          "shift_right_224_unsigned",
          ["value"],
          ["newValue"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["newValue"],
              Some (M.call (|
                "shr",
                [
                  [Literal.number 224];
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_unbounded",
          [],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "mload",
                [
                  [Literal.number 64]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_uint256",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "validator_revert_uint256",
          ["value"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "iszero",
                [
                  M.call (|
                    "eq",
                    [
                      M.get_var (| "value" |);
                      M.call (|
                        "cleanup_uint256",
                        [
                          M.get_var (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert",
                    [
                      [Literal.number 0];
                      [Literal.number 0]
                    ]
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_decode_uint256",
          ["offset"; "end"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "calldataload",
                [
                  M.get_var (| "offset" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "validator_revert_uint256",
                [
                  M.get_var (| "value" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_decode_uint256t_uint256t_uint256",
          ["headStart"; "dataEnd"],
          ["value0";
      "value1";
      "value2"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "slt",
                [
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "dataEnd" |);
                      M.get_var (| "headStart" |)
                    ]
                  |);
                  [Literal.number 96]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["offset"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["value0"],
              Some (M.call (|
                "abi_decode_uint256",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      M.get_var (| "offset" |)
                    ]
                  |);
                  M.get_var (| "dataEnd" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["offset_1"],
              Some ([Literal.number 32])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["value1"],
              Some (M.call (|
                "abi_decode_uint256",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      M.get_var (| "offset_1" |)
                    ]
                  |);
                  M.get_var (| "dataEnd" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["offset_2"],
              Some ([Literal.number 64])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["value2"],
              Some (M.call (|
                "abi_decode_uint256",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      M.get_var (| "offset_2" |)
                    ]
                  |);
                  M.get_var (| "dataEnd" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_uint256",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some ([Literal.number 0x01f4])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_storeLengthForEncoding_array_uint256",
          ["pos"; "length"],
          ["updated_pos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["updated_pos"],
              Some (M.get_var (| "pos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_uint256",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_uint256",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "pos" |);
                  M.call (|
                    "cleanup_uint256",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encodeUpdatedPos_uint256",
          ["value0"; "pos"],
          ["updatedPos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_uint256",
                [
                  M.get_var (| "value0" |);
                  M.get_var (| "pos" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["updatedPos"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "pos" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_nextElement_array_uint256",
          ["ptr"],
          ["next"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["next"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "ptr" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_uint256",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_uint256",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["pos"],
              Some (M.call (|
                "array_storeLengthForEncoding_array_uint256",
                [
                  M.get_var (| "pos" |);
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["baseRef"],
              Some (M.call (|
                "array_dataslot_array_uint256",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["srcPtr"],
              Some (M.get_var (| "baseRef" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["elementValue0"],
                    Some (M.call (|
                      "mload",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["pos"],
                    Some (M.call (|
                      "abi_encodeUpdatedPos_uint256",
                      [
                        M.get_var (| "elementValue0" |);
                        M.get_var (| "pos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["srcPtr"],
                    Some (M.call (|
                      "array_nextElement_array_uint256",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_bool",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some ([Literal.number 0x01f4])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_storeLengthForEncoding_array_bool",
          ["pos"; "length"],
          ["updated_pos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["updated_pos"],
              Some (M.get_var (| "pos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_bool",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_bool",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.call (|
                "iszero",
                [
                  M.call (|
                    "iszero",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_bool",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "pos" |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encodeUpdatedPos_bool",
          ["value0"; "pos"],
          ["updatedPos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_bool",
                [
                  M.get_var (| "value0" |);
                  M.get_var (| "pos" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["updatedPos"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "pos" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_nextElement_array_bool",
          ["ptr"],
          ["next"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["next"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "ptr" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_bool",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_bool",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["pos"],
              Some (M.call (|
                "array_storeLengthForEncoding_array_bool",
                [
                  M.get_var (| "pos" |);
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["baseRef"],
              Some (M.call (|
                "array_dataslot_array_bool",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["srcPtr"],
              Some (M.get_var (| "baseRef" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["elementValue0"],
                    Some (M.call (|
                      "mload",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["pos"],
                    Some (M.call (|
                      "abi_encodeUpdatedPos_bool",
                      [
                        M.get_var (| "elementValue0" |);
                        M.get_var (| "pos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["srcPtr"],
                    Some (M.call (|
                      "array_nextElement_array_bool",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_array_bytes32",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some ([Literal.number 0x01f4])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_storeLengthForEncoding_array_array_bytes32_fromStack",
          ["pos"; "length"],
          ["updated_pos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["updated_pos"],
              Some (M.get_var (| "pos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_array_bytes32",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_bytes32_memory_ptr",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some ([Literal.number 0x03])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_storeLengthForEncoding_array_bytes32",
          ["pos"; "length"],
          ["updated_pos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["updated_pos"],
              Some (M.get_var (| "pos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_bytes32",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_bytes32",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_bytes32",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "pos" |);
                  M.call (|
                    "cleanup_bytes32",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encodeUpdatedPos_bytes32",
          ["value0"; "pos"],
          ["updatedPos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_bytes32",
                [
                  M.get_var (| "value0" |);
                  M.get_var (| "pos" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["updatedPos"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "pos" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_nextElement_array_bytes32_memory_ptr",
          ["ptr"],
          ["next"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["next"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "ptr" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_bytes32",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_bytes32_memory_ptr",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["pos"],
              Some (M.call (|
                "array_storeLengthForEncoding_array_bytes32",
                [
                  M.get_var (| "pos" |);
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["baseRef"],
              Some (M.call (|
                "array_dataslot_array_bytes32",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["srcPtr"],
              Some (M.get_var (| "baseRef" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["elementValue0"],
                    Some (M.call (|
                      "mload",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["pos"],
                    Some (M.call (|
                      "abi_encodeUpdatedPos_bytes32",
                      [
                        M.get_var (| "elementValue0" |);
                        M.get_var (| "pos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["srcPtr"],
                    Some (M.call (|
                      "array_nextElement_array_bytes32_memory_ptr",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encodeUpdatedPos_array_bytes32",
          ["value0"; "pos"],
          ["updatedPos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bytes32",
                [
                  M.get_var (| "value0" |);
                  M.get_var (| "pos" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["updatedPos"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "pos" |);
                  [Literal.number 0x60]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_nextElement_array_array_bytes32_memory_ptr_memory_ptr",
          ["ptr"],
          ["next"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["next"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "ptr" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_array_bytes32_memory_ptr_memory_ptr",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_array_bytes32",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["pos"],
              Some (M.call (|
                "array_storeLengthForEncoding_array_array_bytes32_fromStack",
                [
                  M.get_var (| "pos" |);
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["baseRef"],
              Some (M.call (|
                "array_dataslot_array_array_bytes32",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["srcPtr"],
              Some (M.get_var (| "baseRef" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["elementValue0"],
                    Some (M.call (|
                      "mload",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["pos"],
                    Some (M.call (|
                      "abi_encodeUpdatedPos_array_bytes32",
                      [
                        M.get_var (| "elementValue0" |);
                        M.get_var (| "pos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["srcPtr"],
                    Some (M.call (|
                      "array_nextElement_array_array_bytes32_memory_ptr_memory_ptr",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_array_bytes32_memory_ptr_memory_ptr",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some ([Literal.number 0x01f4])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_storeLengthForEncoding_array_array_bytes32",
          ["pos"; "length"],
          ["updated_pos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["updated_pos"],
              Some (M.get_var (| "pos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_array_bytes32_memory_ptr_memory_ptr",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_length_array_bytes32",
          ["value"],
          ["length"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["length"],
              Some ([Literal.number 0x02])
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_storeLengthForEncoding_array_bytes32_memory_ptr",
          ["pos"; "length"],
          ["updated_pos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["updated_pos"],
              Some (M.get_var (| "pos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_dataslot_array_bytes32_memory_ptr",
          ["ptr"],
          ["data"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["data"],
              Some (M.get_var (| "ptr" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_nextElement_array_bytes32",
          ["ptr"],
          ["next"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["next"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "ptr" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_bytes32_memory_ptr",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_bytes32",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["pos"],
              Some (M.call (|
                "array_storeLengthForEncoding_array_bytes32_memory_ptr",
                [
                  M.get_var (| "pos" |);
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["baseRef"],
              Some (M.call (|
                "array_dataslot_array_bytes32_memory_ptr",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["srcPtr"],
              Some (M.get_var (| "baseRef" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["elementValue0"],
                    Some (M.call (|
                      "mload",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["pos"],
                    Some (M.call (|
                      "abi_encodeUpdatedPos_bytes32",
                      [
                        M.get_var (| "elementValue0" |);
                        M.get_var (| "pos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["srcPtr"],
                    Some (M.call (|
                      "array_nextElement_array_bytes32",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encodeUpdatedPos_array_bytes32_memory_ptr",
          ["value0"; "pos"],
          ["updatedPos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bytes32_memory_ptr",
                [
                  M.get_var (| "value0" |);
                  M.get_var (| "pos" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["updatedPos"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "pos" |);
                  [Literal.number 0x40]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_nextElement_array_array_bytes32",
          ["ptr"],
          ["next"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["next"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "ptr" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_array_bytes32",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["length"],
              Some (M.call (|
                "array_length_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["pos"],
              Some (M.call (|
                "array_storeLengthForEncoding_array_array_bytes32",
                [
                  M.get_var (| "pos" |);
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["baseRef"],
              Some (M.call (|
                "array_dataslot_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["srcPtr"],
              Some (M.get_var (| "baseRef" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "length" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 1]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.declare (|
                    ["elementValue0"],
                    Some (M.call (|
                      "mload",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["pos"],
                    Some (M.call (|
                      "abi_encodeUpdatedPos_array_bytes32_memory_ptr",
                      [
                        M.get_var (| "elementValue0" |);
                        M.get_var (| "pos" |)
                      ]
                    |))
                  |)
                )) in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["srcPtr"],
                    Some (M.call (|
                      "array_nextElement_array_array_bytes32",
                      [
                        M.get_var (| "srcPtr" |)
                      ]
                    |))
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_uint256_array_uint256_array_uint256_array_bool_array_array_bytes32_array_array_bytes32_array_uint256_array_bool",
          ["headStart"; "value0"; "value1"; "value2"; "value3"; "value4"; "value5"; "value6"; "value7"],
          ["tail"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["tail"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "headStart" |);
                  [Literal.number 176000]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value0" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value1" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 16000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value2" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 32000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bool",
                [
                  M.get_var (| "value3" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 48000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "value4" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 64000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_array_bytes32",
                [
                  M.get_var (| "value5" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 112000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value6" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 144000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bool",
                [
                  M.get_var (| "value7" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 160000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_return500PaymentsByDates",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["param"; "param_1"; "param_2"],
              Some (M.call (|
                "abi_decode_uint256t_uint256t_uint256",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["ret"; "ret_1"; "ret_2"; "ret_3"; "ret_4"; "ret_5"; "ret_6"; "ret_7"],
              Some (M.call (|
                "fun_return500PaymentsByDates",
                [
                  M.get_var (| "param" |);
                  M.get_var (| "param_1" |);
                  M.get_var (| "param_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_array_uint256_array_uint256_array_uint256_array_bool_array_array_bytes32_array_array_bytes32_array_uint256_array_bool",
                [
                  M.get_var (| "memPos" |);
                  M.get_var (| "ret" |);
                  M.get_var (| "ret_1" |);
                  M.get_var (| "ret_2" |);
                  M.get_var (| "ret_3" |);
                  M.get_var (| "ret_4" |);
                  M.get_var (| "ret_5" |);
                  M.get_var (| "ret_6" |);
                  M.get_var (| "ret_7" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get_var (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "memEnd" |);
                      M.get_var (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_decode_tuple_uint256",
          ["headStart"; "dataEnd"],
          ["value0"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "slt",
                [
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "dataEnd" |);
                      M.get_var (| "headStart" |)
                    ]
                  |);
                  [Literal.number 32]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["offset"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["value0"],
              Some (M.call (|
                "abi_decode_uint256",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      M.get_var (| "offset" |)
                    ]
                  |);
                  M.get_var (| "dataEnd" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "identity",
          ["value"],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "convert_uint256_to_uint256",
          ["value"],
          ["converted"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["converted"],
              Some (M.call (|
                "cleanup_uint256",
                [
                  M.call (|
                    "identity",
                    [
                      M.call (|
                        "cleanup_uint256",
                        [
                          M.get_var (| "value" |)
                        ]
                      |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "mapping_index_access_mapping_uint256_struct_Invoice_storage_of_uint256",
          ["slot"; "key"],
          ["dataSlot"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "convert_uint256_to_uint256",
                    [
                      M.get_var (| "key" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0x20];
                  M.get_var (| "slot" |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["dataSlot"],
              Some (M.call (|
                "keccak256",
                [
                  [Literal.number 0];
                  [Literal.number 0x40]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "shift_right_0_unsigned",
          ["value"],
          ["newValue"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["newValue"],
              Some (M.call (|
                "shr",
                [
                  [Literal.number 0];
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_from_storage_uint256",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.get_var (| "value" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "extract_from_storage_value_offsett_uint256",
          ["slot_value"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "cleanup_from_storage_uint256",
                [
                  M.call (|
                    "shift_right_0_unsigned",
                    [
                      M.get_var (| "slot_value" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "read_from_storage_split_offset_uint256",
          ["slot"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "extract_from_storage_value_offsett_uint256",
                [
                  M.call (|
                    "sload",
                    [
                      M.get_var (| "slot" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "cleanup_from_storage_bool",
          ["value"],
          ["cleaned"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["cleaned"],
              Some (M.call (|
                "and",
                [
                  M.get_var (| "value" |);
                  [Literal.number 0xff]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "extract_from_storage_value_offset_0t_bool",
          ["slot_value"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "cleanup_from_storage_bool",
                [
                  M.call (|
                    "shift_right_0_unsigned",
                    [
                      M.get_var (| "slot_value" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "read_from_storage_split_offset_t_bool",
          ["slot"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "extract_from_storage_value_offset_0t_bool",
                [
                  M.call (|
                    "sload",
                    [
                      M.get_var (| "slot" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "shift_right_8_unsigned",
          ["value"],
          ["newValue"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["newValue"],
              Some (M.call (|
                "shr",
                [
                  [Literal.number 8];
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "extract_from_storage_value_offset_1t_bool",
          ["slot_value"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "cleanup_from_storage_bool",
                [
                  M.call (|
                    "shift_right_8_unsigned",
                    [
                      M.get_var (| "slot_value" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "read_from_storage_split_offset_bool",
          ["slot"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "extract_from_storage_value_offset_1t_bool",
                [
                  M.call (|
                    "sload",
                    [
                      M.get_var (| "slot" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "shift_right_unsigned",
          ["value"],
          ["newValue"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["newValue"],
              Some (M.call (|
                "shr",
                [
                  [Literal.number 16];
                  M.get_var (| "value" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "extract_from_storage_value_offsett_bool",
          ["slot_value"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "cleanup_from_storage_bool",
                [
                  M.call (|
                    "shift_right_unsigned",
                    [
                      M.get_var (| "slot_value" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "read_from_storage_split_offset_2_bool",
          ["slot"],
          ["value"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["value"],
              Some (M.call (|
                "extract_from_storage_value_offsett_bool",
                [
                  M.call (|
                    "sload",
                    [
                      M.get_var (| "slot" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "getter_fun_invoices",
          ["key"],
          ["ret";
      "ret_1";
      "ret_2";
      "ret_3"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["slot"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["slot"],
              Some (M.call (|
                "mapping_index_access_mapping_uint256_struct_Invoice_storage_of_uint256",
                [
                  M.get_var (| "slot" |);
                  M.get_var (| "key" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "read_from_storage_split_offset_uint256",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "slot" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret_1"],
              Some (M.call (|
                "read_from_storage_split_offset_t_bool",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "slot" |);
                      [Literal.number 1]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret_2"],
              Some (M.call (|
                "read_from_storage_split_offset_bool",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "slot" |);
                      [Literal.number 1]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret_3"],
              Some (M.call (|
                "read_from_storage_split_offset_2_bool",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "slot" |);
                      [Literal.number 1]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_uint256_to_uint256",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "pos" |);
                  M.call (|
                    "cleanup_uint256",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_bool_to_bool",
          ["value"; "pos"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  M.get_var (| "pos" |);
                  M.call (|
                    "cleanup_bool",
                    [
                      M.get_var (| "value" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_uint256_bool_bool_bool",
          ["headStart"; "value0"; "value1"; "value2"; "value3"],
          ["tail"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["tail"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "headStart" |);
                  [Literal.number 128]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_uint256_to_uint256",
                [
                  M.get_var (| "value0" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_bool_to_bool",
                [
                  M.get_var (| "value1" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 32]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_bool_to_bool",
                [
                  M.get_var (| "value2" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 64]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_bool_to_bool",
                [
                  M.get_var (| "value3" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 96]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_invoices",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["param"],
              Some (M.call (|
                "abi_decode_tuple_uint256",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["ret"; "ret_1"; "ret_2"; "ret_3"],
              Some (M.call (|
                "getter_fun_invoices",
                [
                  M.get_var (| "param" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_uint256_bool_bool_bool",
                [
                  M.get_var (| "memPos" |);
                  M.get_var (| "ret" |);
                  M.get_var (| "ret_1" |);
                  M.get_var (| "ret_2" |);
                  M.get_var (| "ret_3" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get_var (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "memEnd" |);
                      M.get_var (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_uint256_array_bool_array_uint256_array_array_bytes32_array_array_bytes32_array_array_bytes32_array_uint256_array_bool_array_bool",
          ["headStart"; "value0"; "value1"; "value2"; "value3"; "value4"; "value5"; "value6"; "value7"; "value8"],
          ["tail"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["tail"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "headStart" |);
                  [Literal.number 224000]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value0" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bool",
                [
                  M.get_var (| "value1" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 16000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value2" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 32000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "value3" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 48000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "value4" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 96000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_array_bytes32",
                [
                  M.get_var (| "value5" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 144000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value6" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 176000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bool",
                [
                  M.get_var (| "value7" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 192000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bool",
                [
                  M.get_var (| "value8" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 208000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_return500InvoicesByDates",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["param"; "param_1"; "param_2"],
              Some (M.call (|
                "abi_decode_uint256t_uint256t_uint256",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["ret"; "ret_1"; "ret_2"; "ret_3"; "ret_4"; "ret_5"; "ret_6"; "ret_7"; "ret_8"],
              Some (M.call (|
                "fun_return500InvoicesByDates",
                [
                  M.get_var (| "param" |);
                  M.get_var (| "param_1" |);
                  M.get_var (| "param_2" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_array_uint256_array_bool_array_uint256_array_array_bytes32_array_array_bytes32_array_array_bytes32_array_uint256_array_bool_array_bool",
                [
                  M.get_var (| "memPos" |);
                  M.get_var (| "ret" |);
                  M.get_var (| "ret_1" |);
                  M.get_var (| "ret_2" |);
                  M.get_var (| "ret_3" |);
                  M.get_var (| "ret_4" |);
                  M.get_var (| "ret_5" |);
                  M.get_var (| "ret_6" |);
                  M.get_var (| "ret_7" |);
                  M.get_var (| "ret_8" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get_var (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "memEnd" |);
                      M.get_var (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "abi_encode_array_uint256_array_uint256_array_uint256_array_bool_array_uint256",
          ["headStart"; "value0"; "value1"; "value2"; "value3"; "value4"],
          ["tail"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["tail"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "headStart" |);
                  [Literal.number 80000]
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value0" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 0]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value1" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 16000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value2" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 32000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_bool",
                [
                  M.get_var (| "value3" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 48000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "abi_encode_array_uint256",
                [
                  M.get_var (| "value4" |);
                  M.call (|
                    "add",
                    [
                      M.get_var (| "headStart" |);
                      [Literal.number 64000]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "external_fun_nredit",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "callvalue",
                []
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["param"],
              Some (M.call (|
                "abi_decode_tuple_uint256",
                [
                  [Literal.number 4];
                  M.call (|
                    "calldatasize",
                    []
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["ret"; "ret_1"; "ret_2"; "ret_3"; "ret_4"],
              Some (M.call (|
                "fun_nredit",
                [
                  M.get_var (| "param" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memPos"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["memEnd"],
              Some (M.call (|
                "abi_encode_array_uint256_array_uint256_array_uint256_array_bool_array_uint256",
                [
                  M.get_var (| "memPos" |);
                  M.get_var (| "ret" |);
                  M.get_var (| "ret_1" |);
                  M.get_var (| "ret_2" |);
                  M.get_var (| "ret_3" |);
                  M.get_var (| "ret_4" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "return",
                [
                  M.get_var (| "memPos" |);
                  M.call (|
                    "sub",
                    [
                      M.get_var (| "memEnd" |);
                      M.get_var (| "memPos" |)
                    ]
                  |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "round_up_to_mul_of",
          ["value"],
          ["result"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["result"],
              Some (M.call (|
                "and",
                [
                  M.call (|
                    "add",
                    [
                      M.get_var (| "value" |);
                      [Literal.number 31]
                    ]
                  |);
                  M.call (|
                    "not",
                    [
                      [Literal.number 31]
                    ]
                  |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "panic_error_0x41",
          [],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 0];
                  M.call (|
                    "shl",
                    [
                      [Literal.number 224];
                      [Literal.number 0x4e487b71]
                    ]
                  |)
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 4];
                  [Literal.number 0x41]
                ]
              |)
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "revert",
                [
                  [Literal.number 0];
                  [Literal.number 0x24]
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "finalize_allocation",
          ["memPtr"; "size"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["newFreePtr"],
              Some (M.call (|
                "add",
                [
                  M.get_var (| "memPtr" |);
                  M.call (|
                    "round_up_to_mul_of",
                    [
                      M.get_var (| "size" |)
                    ]
                  |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "or",
                [
                  M.call (|
                    "gt",
                    [
                      M.get_var (| "newFreePtr" |);
                      [Literal.number 0xffffffffffffffff]
                    ]
                  |);
                  M.call (|
                    "lt",
                    [
                      M.get_var (| "newFreePtr" |);
                      M.get_var (| "memPtr" |)
                    ]
                  |)
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "mstore",
                [
                  [Literal.number 64];
                  M.get_var (| "newFreePtr" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory",
          ["size"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_unbounded",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "finalize_allocation",
                [
                  M.get_var (| "memPtr" |);
                  M.get_var (| "size" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_uint256",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_uint256",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_uint256",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_memory_chunk_uint256",
          ["dataStart"; "dataSizeInBytes"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "calldatacopy",
                [
                  M.get_var (| "dataStart" |);
                  M.call (|
                    "calldatasize",
                    []
                  |);
                  M.get_var (| "dataSizeInBytes" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_array_array_uint256",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_uint256",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataStart"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataSize"],
              Some (M.call (|
                "array_allocation_size_array_uint256",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "zero_memory_chunk_uint256",
                [
                  M.get_var (| "dataStart" |);
                  M.get_var (| "dataSize" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_array_uint256",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_array_array_uint256",
                [
                  [Literal.number 500]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_bool",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_bool",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_bool",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_memory_chunk_bool",
          ["dataStart"; "dataSizeInBytes"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "calldatacopy",
                [
                  M.get_var (| "dataStart" |);
                  M.call (|
                    "calldatasize",
                    []
                  |);
                  M.get_var (| "dataSizeInBytes" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_array_array_bool",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_bool",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataStart"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataSize"],
              Some (M.call (|
                "array_allocation_size_array_bool",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "zero_memory_chunk_bool",
                [
                  M.get_var (| "dataStart" |);
                  M.get_var (| "dataSize" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_array_bool",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_array_array_bool",
                [
                  [Literal.number 500]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_array_bytes32_memory_ptr_memory_ptr",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_array_bytes32",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_bytes32_memory_ptr",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_bytes32_memory_ptr",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_bytes32_memory_ptr",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_memory_chunk_bytes32",
          ["dataStart"; "dataSizeInBytes"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "calldatacopy",
                [
                  M.get_var (| "dataStart" |);
                  M.call (|
                    "calldatasize",
                    []
                  |);
                  M.get_var (| "dataSizeInBytes" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_array_array_bytes32",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_bytes32_memory_ptr",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataStart"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataSize"],
              Some (M.call (|
                "array_allocation_size_array_bytes32_memory_ptr",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "zero_memory_chunk_bytes32",
                [
                  M.get_var (| "dataStart" |);
                  M.get_var (| "dataSize" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_array_bytes32",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_array_array_bytes32",
                [
                  [Literal.number 3]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_complex_memory_array_array_array_bytes32_memory_ptr_memory_ptr",
          ["dataStart"; "dataSizeInBytes"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "dataSizeInBytes" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 32]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        M.call (|
                          "add",
                          [
                            M.get_var (| "dataStart" |);
                            M.get_var (| "i" |)
                          ]
                        |);
                        M.call (|
                          "zero_value_for_array_bytes32",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_array_array_array_bytes32",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_array_bytes32",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataStart"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataSize"],
              Some (M.call (|
                "array_allocation_size_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "zero_complex_memory_array_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "dataStart" |);
                  M.get_var (| "dataSize" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_array_array_bytes32",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_array_array_array_bytes32",
                [
                  [Literal.number 500]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_array_bytes32",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_array_bytes32_memory_ptr_memory_ptr",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_array_bytes32",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "array_allocation_size_array_bytes32",
          ["length"],
          ["size"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.if_ (|
              M.call (|
                "gt",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0xffffffffffffffff]
                ]
              |),
              do* M.open_scope in
              do* ltac:(M.monadic (
                M.expr_stmt (|
                  M.call (|
                    "panic_error_0x41",
                    []
                  |)
                |)
              )) in
              M.close_scope
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["size"],
              Some (M.call (|
                "mul",
                [
                  M.get_var (| "length" |);
                  [Literal.number 0x20]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_memory_array_array_bytes32",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["allocSize"],
              Some (M.call (|
                "array_allocation_size_array_bytes32",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory",
                [
                  M.get_var (| "allocSize" |)
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_array_array_bytes32_memory_ptr",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_bytes32",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataStart"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataSize"],
              Some (M.call (|
                "array_allocation_size_array_bytes32",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "zero_memory_chunk_bytes32",
                [
                  M.get_var (| "dataStart" |);
                  M.get_var (| "dataSize" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_array_bytes32_memory_ptr",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_array_array_bytes32_memory_ptr",
                [
                  [Literal.number 2]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_complex_memory_array_array_array_bytes32",
          ["dataStart"; "dataSizeInBytes"],
          [],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["i"],
              Some ([Literal.number 0])
            |)
          )) in
          do* ltac:(M.monadic (
            do*
              do* M.open_scope in
              M.close_scope in
      ltac:(M.monadic (
              M.for_ (|
                M.call (|
                  "lt",
                  [
                    M.get_var (| "i" |);
                    M.get_var (| "dataSizeInBytes" |)
                  ]
                |),
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.assign (|
                    ["i"],
                    Some (M.call (|
                      "add",
                      [
                        M.get_var (| "i" |);
                        [Literal.number 32]
                      ]
                    |))
                  |)
                )) in
                M.close_scope,
                do* M.open_scope in
                do* ltac:(M.monadic (
                  M.expr_stmt (|
                    M.call (|
                      "mstore",
                      [
                        M.call (|
                          "add",
                          [
                            M.get_var (| "dataStart" |);
                            M.get_var (| "i" |)
                          ]
                        |);
                        M.call (|
                          "zero_value_for_array_bytes32_memory_ptr",
                          []
                        |)
                      ]
                    |)
                  |)
                )) in
                M.close_scope
              |)
            ))
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "allocate_and_zero_memory_array_array_array_bytes32_memory_ptr_memory_ptr",
          ["length"],
          ["memPtr"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["memPtr"],
              Some (M.call (|
                "allocate_memory_array_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataStart"],
              Some (M.get_var (| "memPtr" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["dataSize"],
              Some (M.call (|
                "array_allocation_size_array_array_bytes32",
                [
                  M.get_var (| "length" |)
                ]
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.expr_stmt (|
              M.call (|
                "zero_complex_memory_array_array_array_bytes32",
                [
                  M.get_var (| "dataStart" |);
                  M.get_var (| "dataSize" |)
                ]
              |)
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "zero_value_for_split_array_array_bytes32_memory_ptr_memory_ptr",
          [],
          ["ret"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.assign (|
              ["ret"],
              Some (M.call (|
                "allocate_and_zero_memory_array_array_array_bytes32_memory_ptr_memory_ptr",
                [
                  [Literal.number 500]
                ]
              |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_return500PaymentsByDates",
          ["var_begindate"; "var_enddate"; "var_startindex"],
          ["var_BIDs_mpos";
      "var_dates_107_mpos";
      "var_RIDs_mpos";
      "var_Bboolas_mpos";
      "var_bytesbs_121_mpos";
      "var_bytescs_127_mpos";
      "var_amounts_131_mpos";
      "var_Bboolbs_mpos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_memory_ptr_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_BIDs_mpos"],
              Some (M.get_var (| "zero_array_uint256_memory_ptr_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_array_t_uint256_memory_ptr_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_dates_107_mpos"],
              Some (M.get_var (| "zero_t_array_t_uint256_memory_ptr_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_3_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_RIDs_mpos"],
              Some (M.get_var (| "zero_array_uint256_3_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_array_t_bool_memory_ptr_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Bboolas_mpos"],
              Some (M.get_var (| "zero_t_array_t_bool_memory_ptr_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_array_bytes32_memory_ptr_memory_ptr_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_array_bytes32",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_bytesbs_121_mpos"],
              Some (M.get_var (| "zero_array_array_bytes32_memory_ptr_memory_ptr_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_array_bytes32_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_array_bytes32_memory_ptr_memory_ptr",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_bytescs_127_mpos"],
              Some (M.get_var (| "zero_array_array_bytes32_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_7_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_amounts_131_mpos"],
              Some (M.get_var (| "zero_array_uint256_7_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_bool_8_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Bboolbs_mpos"],
              Some (M.get_var (| "zero_array_bool_8_mpos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_return500InvoicesByDates",
          ["var_begindate"; "var_enddate"; "var_startindex"],
          ["var_AIDs_mpos";
      "var_Aboolas_mpos";
      "var_dates_59_mpos";
      "var_Abytesas_mpos";
      "var_bytesbs_mpos";
      "var_bytescs_mpos";
      "var_amounts_mpos";
      "var_Aboolbs_mpos";
      "var_Aboolcs_mpos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_9_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_AIDs_mpos"],
              Some (M.get_var (| "zero_array_uint256_9_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_array_t_bool_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Aboolas_mpos"],
              Some (M.get_var (| "zero_t_array_t_bool_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_array_t_uint256_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_dates_59_mpos"],
              Some (M.get_var (| "zero_t_array_t_uint256_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_array_t_array_t_bytes32_memory_ptr_memory_ptr_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_array_bytes32",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Abytesas_mpos"],
              Some (M.get_var (| "zero_t_array_t_array_t_bytes32_memory_ptr_memory_ptr_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_t_array_t_array_t_bytes32_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_array_bytes32",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_bytesbs_mpos"],
              Some (M.get_var (| "zero_t_array_t_array_t_bytes32_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_array_bytes32_500_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_array_bytes32_memory_ptr_memory_ptr",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_bytescs_mpos"],
              Some (M.get_var (| "zero_array_array_bytes32_500_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_15_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_amounts_mpos"],
              Some (M.get_var (| "zero_array_uint256_15_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_bool_16_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Aboolbs_mpos"],
              Some (M.get_var (| "zero_array_bool_16_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_bool_memory_ptr_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Aboolcs_mpos"],
              Some (M.get_var (| "zero_array_bool_memory_ptr_mpos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        M.function (|
          "fun_nredit",
          ["var_startindex"],
          ["var_CIDs_mpos";
      "var_dates_mpos";
      "var_RIDs_29_mpos";
      "var_Cboolas_mpos";
      "var_amounts_37_mpos"],
          do* M.open_scope in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_18_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_CIDs_mpos"],
              Some (M.get_var (| "zero_array_uint256_18_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_dates_mpos"],
              Some (M.get_var (| "zero_array_uint256_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_20_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_RIDs_29_mpos"],
              Some (M.get_var (| "zero_array_uint256_20_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_bool_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_bool",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_Cboolas_mpos"],
              Some (M.get_var (| "zero_array_bool_mpos" |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.declare (|
              ["zero_array_uint256_22_mpos"],
              Some (M.call (|
                "zero_value_for_split_array_uint256",
                []
              |))
            |)
          )) in
          do* ltac:(M.monadic (
            M.assign (|
              ["var_amounts_37_mpos"],
              Some (M.get_var (| "zero_array_uint256_22_mpos" |))
            |)
          )) in
          M.close_scope
        |)
      )) in
      do* ltac:(M.monadic (
        do* M.open_scope in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "mstore",
              [
                [Literal.number 64];
                M.call (|
                  "memoryguard",
                  [
                    [Literal.number 0x80]
                  ]
                |)
              ]
            |)
          |)
        )) in
        do* ltac:(M.monadic (
          M.if_ (|
            M.call (|
              "iszero",
              [
                M.call (|
                  "lt",
                  [
                    M.call (|
                      "calldatasize",
                      []
                    |);
                    [Literal.number 4]
                  ]
                |)
              ]
            |),
            do* M.open_scope in
            do* ltac:(M.monadic (
              M.declare (|
                ["selector"],
                Some (M.call (|
                  "shift_right_224_unsigned",
                  [
                    M.call (|
                      "calldataload",
                      [
                        [Literal.number 0]
                      ]
                    |)
                  ]
                |))
              |)
            )) in
            do* ltac:(M.monadic (
              M.switch (|
                M.get_var (| "selector" |),
                [
                  (
                    Some (Literal.number 0x10e1cdcb),
                    do* M.open_scope in
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_return500PaymentsByDates",
                          []
                        |)
                      |)
                    )) in
                    M.close_scope
                  );
                  (
                    Some (Literal.number 0x4e6d1405),
                    do* M.open_scope in
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_invoices",
                          []
                        |)
                      |)
                    )) in
                    M.close_scope
                  );
                  (
                    Some (Literal.number 0x7903f54a),
                    do* M.open_scope in
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_return500InvoicesByDates",
                          []
                        |)
                      |)
                    )) in
                    M.close_scope
                  );
                  (
                    Some (Literal.number 0x7f2a39c0),
                    do* M.open_scope in
                    do* ltac:(M.monadic (
                      M.expr_stmt (|
                        M.call (|
                          "external_fun_nredit",
                          []
                        |)
                      |)
                    )) in
                    M.close_scope
                  );
                  (
                    None,
                    do* M.open_scope in
                    M.close_scope
                  )          ]
              |)
            )) in
            M.close_scope
          |)
        )) in
        do* ltac:(M.monadic (
          M.expr_stmt (|
            M.call (|
              "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74",
              []
            |)
          |)
        )) in
        M.close_scope
      )) in
      M.close_scope.

    Definition data : string :=
      "a26469706673582212205cccb91dcbbb793adf9db6fd7d22e4066348b993e528b7af922734813c074a3164736f6c634300081b0033".
  End C_139_deployed.
End C_139.
