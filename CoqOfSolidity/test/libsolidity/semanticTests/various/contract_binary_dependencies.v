(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          NewExpression (* Beginning of a node! *)
id: 4
src: 51:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 3
src: 51:1:0
nodeType: IdentifierPath
name: B
nameLocations: [51:1:0, ]
referencedDeclaration: 15

referencedDeclaration: 15
typeDescriptions: typeString contract BtypeIdentifier st_contract$_B_$15

,
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.

(* Contract *)
Module B.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
         in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End B.

(* Contract *)
Module C.
  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          NewExpression (* Beginning of a node! *)
id: 19
src: 161:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 18
src: 161:1:0
nodeType: IdentifierPath
name: B
nameLocations: [161:1:0, ]
referencedDeclaration: 15

referencedDeclaration: 15
typeDescriptions: typeString contract BtypeIdentifier st_contract$_B_$15

,
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
