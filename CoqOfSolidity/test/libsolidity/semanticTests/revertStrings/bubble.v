(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Contract *)
Module A.
  Definition g (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.get_name (| "revert" |),
          [
            Value.String "fail"
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End A.

(* Contract *)
Module C.
  Definition a : Value.t :=
    M.call (|
      NewExpression (* Beginning of a node! *)
id: 13
src: 81:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 12
src: 81:1:0
nodeType: IdentifierPath
name: A
nameLocations: [81:1:0, ]
referencedDeclaration: 9

referencedDeclaration: 9
typeDescriptions: typeString contract AtypeIdentifier st_contract$_A_$9

,
      []
    |).

  Definition f (α : list Value.t) : M :=
    match α with
    | [] =>
      let _ :=
        M.call (|
          M.member_access (|
            M.get_name (| "a" |),
            "g"
          |),
          []
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
