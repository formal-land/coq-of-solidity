(* Generated by coq-of-solidity *)
Require CoqOfSolidity.CoqOfSolidity.

(* Pragma abicoderv2 *)

(* Struct S *)
(* Library *)
Module L.
  Definition reverse (α : list Value.t) : M :=
    match α with
    | [_s] =>
      let _ :=
        M.return_ (|
          Value.Tuple [
            M.member_access (|
              M.get_name (| "_s" |),
              "y"
            |),
            M.member_access (|
              M.get_name (| "_s" |),
              "x"
            |)
          ]
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End L.

(* Contract *)
Module C.
  (* Beginning of a node! *)
id: 28
src: 199:14:0
nodeType: UsingForDirective
typeName: (* Beginning of a node! *)
id: 27
src: 211:1:0
nodeType: UserDefinedTypeName
pathNode: (* Beginning of a node! *)
id: 26
src: 211:1:0
nodeType: IdentifierPath
name: S
nameLocations: [211:1:0, ]
referencedDeclaration: 6

referencedDeclaration: 6
typeDescriptions: typeString struct StypeIdentifier st_struct$_S_$6_storage_ptr

libraryName: (* Beginning of a node! *)
id: 25
src: 205:1:0
nodeType: IdentifierPath
name: L
nameLocations: [205:1:0, ]
referencedDeclaration: 24

global: 0


  Definition test (α : list Value.t) : M :=
    match α with
    | [, _s, ] =>
      let _ :=
        M.return_ (|
          M.call (|
            M.member_access (|
              M.get_name (| "_s" |),
              "reverse"
            |),
            []
          |)
        |) in
      Value.Tuple []
    | _ => M.impossible "invalid number of parameters"
    end.
End C.
